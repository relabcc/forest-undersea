{"version":3,"file":"194-137fdffcae5fcb05aa69.js","mappings":"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","sources":["webpack://styled-gatsby-starter/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://styled-gatsby-starter/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://styled-gatsby-starter/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://styled-gatsby-starter/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://styled-gatsby-starter/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://styled-gatsby-starter/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://styled-gatsby-starter/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://styled-gatsby-starter/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://styled-gatsby-starter/./node_modules/@pixi/particle-emitter/lib/particle-emitter.es.js"],"sourcesContent":["export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _get from \"C:/Users/yrj19/re-coral/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _inherits from \"C:/Users/yrj19/re-coral/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"C:/Users/yrj19/re-coral/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"C:/Users/yrj19/re-coral/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"C:/Users/yrj19/re-coral/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/yrj19/re-coral/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/*!\n * @pixi/particle-emitter - v5.0.5\n * Compiled Sat, 09 Apr 2022 18:09:57 UTC\n *\n * @pixi/particle-emitter is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Texture } from '@pixi/core';\nimport { BLEND_MODES } from '@pixi/constants';\nimport { Sprite } from '@pixi/sprite';\nimport { settings } from '@pixi/settings';\nimport { Point } from '@pixi/math';\nimport { Ticker } from '@pixi/ticker';\nimport { Container, DisplayObject } from '@pixi/display';\n/**\r\n * A single node in a PropertyList.\r\n */\n\nvar PropertyNode = /*#__PURE__*/function () {\n  /**\r\n   * @param value The value for this node\r\n   * @param time The time for this node, between 0-1\r\n   * @param [ease] Custom ease for this list. Only relevant for the first node.\r\n   */\n  function PropertyNode(value, time, ease) {\n    _classCallCheck(this, PropertyNode);\n\n    this.value = value;\n    this.time = time;\n    this.next = null;\n    this.isStepped = false;\n\n    if (ease) {\n      this.ease = typeof ease === 'function' ? ease : generateEase(ease);\n    } else {\n      this.ease = null;\n    }\n  }\n  /**\r\n   * Creates a list of property values from a data object {list, isStepped} with a list of objects in\r\n   * the form {value, time}. Alternatively, the data object can be in the deprecated form of\r\n   * {start, end}.\r\n   * @param data The data for the list.\r\n   * @param data.list The array of value and time objects.\r\n   * @param data.isStepped If the list is stepped rather than interpolated.\r\n   * @param data.ease Custom ease for this list.\r\n   * @return The first node in the list\r\n   */\n  // eslint-disable-next-line max-len\n\n\n  _createClass(PropertyNode, null, [{\n    key: \"createList\",\n    value: function createList(data) {\n      if ('list' in data) {\n        var array = data.list;\n        var node;\n        var _array$ = array[0],\n            value = _array$.value,\n            time = _array$.time; // eslint-disable-next-line max-len\n\n        var first = node = new PropertyNode(typeof value === 'string' ? hexToRGB(value) : value, time, data.ease); // only set up subsequent nodes if there are a bunch or the 2nd one is different from the first\n\n        if (array.length > 2 || array.length === 2 && array[1].value !== value) {\n          for (var i = 1; i < array.length; ++i) {\n            var _array$i = array[i],\n                _value = _array$i.value,\n                _time = _array$i.time;\n            node.next = new PropertyNode(typeof _value === 'string' ? hexToRGB(_value) : _value, _time);\n            node = node.next;\n          }\n        }\n\n        first.isStepped = !!data.isStepped;\n        return first;\n      } // Handle deprecated version here\n\n\n      var start = new PropertyNode(typeof data.start === 'string' ? hexToRGB(data.start) : data.start, 0); // only set up a next value if it is different from the starting value\n\n      if (data.end !== data.start) {\n        start.next = new PropertyNode(typeof data.end === 'string' ? hexToRGB(data.end) : data.end, 1);\n      }\n\n      return start;\n    }\n  }]);\n\n  return PropertyNode;\n}();\n/**\r\n * The method used by behaviors to fetch textures. Defaults to Texture.from.\r\n */\n// get Texture.from(), only supports V5 and V6 with individual packages\n// eslint-disable-next-line prefer-const\n\n\nvar GetTextureFromString = Texture.from;\n/**\r\n * If errors and warnings should be logged within the library.\r\n */\n\nvar verbose = false;\nvar DEG_TO_RADS = Math.PI / 180;\n/**\r\n * Rotates a point by a given angle.\r\n * @param angle The angle to rotate by in radians\r\n * @param p The point to rotate around 0,0.\r\n */\n\nfunction rotatePoint(angle, p) {\n  if (!angle) return;\n  var s = Math.sin(angle);\n  var c = Math.cos(angle);\n  var xnew = p.x * c - p.y * s;\n  var ynew = p.x * s + p.y * c;\n  p.x = xnew;\n  p.y = ynew;\n}\n/**\r\n * Combines separate color components (0-255) into a single uint color.\r\n * @param r The red value of the color\r\n * @param g The green value of the color\r\n * @param b The blue value of the color\r\n * @return The color in the form of 0xRRGGBB\r\n */\n\n\nfunction combineRGBComponents(r, g, b\n/* , a*/\n) {\n  return (\n    /* a << 24 |*/\n    r << 16 | g << 8 | b\n  );\n}\n/**\r\n * Returns the length (or magnitude) of this point.\r\n * @param point The point to measure length\r\n * @return The length of this point.\r\n */\n\n\nfunction length(point) {\n  return Math.sqrt(point.x * point.x + point.y * point.y);\n}\n/**\r\n * Reduces the point to a length of 1.\r\n * @param point The point to normalize\r\n */\n\n\nfunction normalize(point) {\n  var oneOverLen = 1 / length(point);\n  point.x *= oneOverLen;\n  point.y *= oneOverLen;\n}\n/**\r\n * Multiplies the x and y values of this point by a value.\r\n * @param point The point to scaleBy\r\n * @param value The value to scale by.\r\n */\n\n\nfunction scaleBy(point, value) {\n  point.x *= value;\n  point.y *= value;\n}\n/**\r\n * Converts a hex string from \"#AARRGGBB\", \"#RRGGBB\", \"0xAARRGGBB\", \"0xRRGGBB\",\r\n * \"AARRGGBB\", or \"RRGGBB\" to an object of ints of 0-255, as\r\n * {r, g, b, (a)}.\r\n * @param color The input color string.\r\n * @param output An object to put the output in. If omitted, a new object is created.\r\n * @return The object with r, g, and b properties, possibly with an a property.\r\n */\n\n\nfunction hexToRGB(color, output) {\n  if (!output) {\n    output = {};\n  }\n\n  if (color.charAt(0) === '#') {\n    color = color.substr(1);\n  } else if (color.indexOf('0x') === 0) {\n    color = color.substr(2);\n  }\n\n  var alpha;\n\n  if (color.length === 8) {\n    alpha = color.substr(0, 2);\n    color = color.substr(2);\n  }\n\n  output.r = parseInt(color.substr(0, 2), 16); // Red\n\n  output.g = parseInt(color.substr(2, 2), 16); // Green\n\n  output.b = parseInt(color.substr(4, 2), 16); // Blue\n\n  if (alpha) {\n    output.a = parseInt(alpha, 16);\n  }\n\n  return output;\n}\n/**\r\n * Generates a custom ease function, based on the GreenSock custom ease, as demonstrated\r\n * by the related tool at http://www.greensock.com/customease/.\r\n * @param segments An array of segments, as created by\r\n * http://www.greensock.com/customease/.\r\n * @return A function that calculates the percentage of change at\r\n *                    a given point in time (0-1 inclusive).\r\n */\n\n\nfunction generateEase(segments) {\n  var qty = segments.length;\n  var oneOverQty = 1 / qty;\n  /*\r\n      * Calculates the percentage of change at a given point in time (0-1 inclusive).\r\n      * @param {Number} time The time of the ease, 0-1 inclusive.\r\n      * @return {Number} The percentage of the change, 0-1 inclusive (unless your\r\n      *                  ease goes outside those bounds).\r\n      */\n  // eslint-disable-next-line func-names\n\n  return function (time) {\n    var i = qty * time | 0; // do a quick floor operation\n\n    var t = (time - i * oneOverQty) * qty;\n    var s = segments[i] || segments[qty - 1];\n    return s.s + t * (2 * (1 - t) * (s.cp - s.s) + t * (s.e - s.s));\n  };\n}\n/**\r\n * Gets a blend mode, ensuring that it is valid.\r\n * @param name The name of the blend mode to get.\r\n * @return The blend mode as specified in the PIXI.BLEND_MODES enumeration.\r\n */\n\n\nfunction getBlendMode(name) {\n  if (!name) return BLEND_MODES.NORMAL;\n  name = name.toUpperCase().replace(/ /g, '_');\n  return BLEND_MODES[name] || BLEND_MODES.NORMAL;\n}\n/**\r\n * Converts a list of {value, time} objects starting at time 0 and ending at time 1 into an evenly\r\n * spaced stepped list of PropertyNodes for color values. This is primarily to handle conversion of\r\n * linear gradients to fewer colors, allowing for some optimization for Canvas2d fallbacks.\r\n * @param list The list of data to convert.\r\n * @param [numSteps=10] The number of steps to use.\r\n * @return The blend mode as specified in the PIXI.blendModes enumeration.\r\n */\n\n\nfunction createSteppedGradient(list) {\n  var numSteps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n\n  if (typeof numSteps !== 'number' || numSteps <= 0) {\n    numSteps = 10;\n  }\n\n  var first = new PropertyNode(hexToRGB(list[0].value), list[0].time);\n  first.isStepped = true;\n  var currentNode = first;\n  var current = list[0];\n  var nextIndex = 1;\n  var next = list[nextIndex];\n\n  for (var i = 1; i < numSteps; ++i) {\n    var lerp = i / numSteps; // ensure we are on the right segment, if multiple\n\n    while (lerp > next.time) {\n      current = next;\n      next = list[++nextIndex];\n    } // convert the lerp value to the segment range\n\n\n    lerp = (lerp - current.time) / (next.time - current.time);\n    var curVal = hexToRGB(current.value);\n    var nextVal = hexToRGB(next.value);\n    var output = {\n      r: (nextVal.r - curVal.r) * lerp + curVal.r,\n      g: (nextVal.g - curVal.g) * lerp + curVal.g,\n      b: (nextVal.b - curVal.b) * lerp + curVal.b\n    };\n    currentNode.next = new PropertyNode(output, i / numSteps);\n    currentNode = currentNode.next;\n  } // we don't need to have a PropertyNode for time of 1, because in a stepped version at that point\n  // the particle has died of old age\n\n\n  return first;\n}\n\nvar ParticleUtils = {\n  __proto__: null,\n  GetTextureFromString: GetTextureFromString,\n  verbose: verbose,\n  DEG_TO_RADS: DEG_TO_RADS,\n  rotatePoint: rotatePoint,\n  combineRGBComponents: combineRGBComponents,\n  length: length,\n  normalize: normalize,\n  scaleBy: scaleBy,\n  hexToRGB: hexToRGB,\n  generateEase: generateEase,\n  getBlendMode: getBlendMode,\n  createSteppedGradient: createSteppedGradient\n};\n/**\r\n * An individual particle image. You shouldn't have to deal with these.\r\n */\n\nvar Particle = /*#__PURE__*/function (_Sprite) {\n  _inherits(Particle, _Sprite);\n\n  var _super = _createSuper(Particle);\n\n  /**\r\n   * @param emitter The emitter that controls this particle.\r\n   */\n  function Particle(emitter) {\n    var _this;\n\n    _classCallCheck(this, Particle);\n\n    // start off the sprite with a blank texture, since we are going to replace it\n    // later when the particle is initialized.\n    _this = _super.call(this); // initialize LinkedListChild props so they are included in underlying JS class definition\n\n    _this.prevChild = _this.nextChild = null;\n    _this.emitter = emitter;\n    _this.config = {}; // particles should be centered\n\n    _this.anchor.x = _this.anchor.y = 0.5;\n    _this.maxLife = 0;\n    _this.age = 0;\n    _this.agePercent = 0;\n    _this.oneOverLife = 0;\n    _this.next = null;\n    _this.prev = null; // save often used functions on the instance instead of the prototype for better speed\n\n    _this.init = _this.init;\n    _this.kill = _this.kill;\n    return _this;\n  }\n  /**\r\n   * Initializes the particle for use, based on the properties that have to\r\n   * have been set already on the particle.\r\n   */\n\n\n  _createClass(Particle, [{\n    key: \"init\",\n    value: function init(maxLife) {\n      this.maxLife = maxLife; // reset the age\n\n      this.age = this.agePercent = 0; // reset the sprite props\n\n      this.rotation = 0;\n      this.position.x = this.position.y = 0;\n      this.scale.x = this.scale.y = 1;\n      this.tint = 0xffffff;\n      this.alpha = 1; // save our lerp helper\n\n      this.oneOverLife = 1 / this.maxLife; // ensure visibility\n\n      this.visible = true;\n    }\n    /**\r\n     * Kills the particle, removing it from the display list\r\n     * and telling the emitter to recycle it.\r\n     */\n\n  }, {\n    key: \"kill\",\n    value: function kill() {\n      this.emitter.recycle(this);\n    }\n    /**\r\n     * Destroys the particle, removing references and preventing future use.\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.parent) {\n        this.parent.removeChild(this);\n      }\n\n      this.emitter = this.next = this.prev = null;\n\n      _get(_getPrototypeOf(Particle.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return Particle;\n}(Sprite);\n/**\r\n * Standard behavior order values, specifying when/how they are used. Other numeric values can be used,\r\n * but only the Spawn value will be handled in a special way. All other values will be sorted numerically.\r\n * Behaviors with the same value will not be given any specific sort order, as they are assumed to not\r\n * interfere with each other.\r\n */\n\n\nvar BehaviorOrder;\n\n(function (BehaviorOrder) {\n  /**\r\n   * Spawn - initial placement and/or rotation. This happens before rotation/translation due to\r\n   * emitter rotation/position is applied.\r\n   */\n  BehaviorOrder[BehaviorOrder[\"Spawn\"] = 0] = \"Spawn\";\n  /**\r\n   * Normal priority, for things that don't matter when they are applied.\r\n   */\n\n  BehaviorOrder[BehaviorOrder[\"Normal\"] = 2] = \"Normal\";\n  /**\r\n   * Delayed priority, for things that need to read other values in order to act correctly.\r\n   */\n\n  BehaviorOrder[BehaviorOrder[\"Late\"] = 5] = \"Late\";\n})(BehaviorOrder || (BehaviorOrder = {})); // get the shared ticker, only supports V5 and V6 with individual packages\n\n/**\r\n * @hidden\r\n */\n\n\nvar ticker = Ticker.shared;\n/**\r\n * Key used in sorted order to determine when to set particle position from the emitter position\r\n * and rotation.\r\n */\n\nvar PositionParticle = Symbol('Position particle per emitter position');\n/**\r\n * A particle emitter.\r\n */\n\nvar Emitter = /*#__PURE__*/function () {\n  /**\r\n   * @param particleParent The container to add the particles to.\r\n   * @param particleImages A texture or array of textures to use\r\n   *                       for the particles. Strings will be turned\r\n   *                       into textures via Texture.from().\r\n   * @param config A configuration object containing settings for the emitter.\r\n   * @param config.emit If config.emit is explicitly passed as false, the\r\n   *                    Emitter will start disabled.\r\n   * @param config.autoUpdate If config.autoUpdate is explicitly passed as\r\n   *                          true, the Emitter will automatically call\r\n   *                          update via the PIXI shared ticker.\r\n   */\n  function Emitter(particleParent, config) {\n    _classCallCheck(this, Emitter);\n\n    this.initBehaviors = [];\n    this.updateBehaviors = [];\n    this.recycleBehaviors = []; // properties for individual particles\n\n    this.minLifetime = 0;\n    this.maxLifetime = 0;\n    this.customEase = null; // properties for spawning particles\n\n    this._frequency = 1;\n    this.spawnChance = 1;\n    this.maxParticles = 1000;\n    this.emitterLifetime = -1;\n    this.spawnPos = new Point();\n    this.particlesPerWave = 1; // emitter properties\n\n    this.rotation = 0;\n    this.ownerPos = new Point();\n    this._prevEmitterPos = new Point();\n    this._prevPosIsValid = false;\n    this._posChanged = false;\n    this._parent = null;\n    this.addAtBack = false;\n    this.particleCount = 0;\n    this._emit = false;\n    this._spawnTimer = 0;\n    this._emitterLife = -1;\n    this._activeParticlesFirst = null;\n    this._activeParticlesLast = null;\n    this._poolFirst = null;\n    this._origConfig = null;\n    this._autoUpdate = false;\n    this._destroyWhenComplete = false;\n    this._completeCallback = null; // set the initial parent\n\n    this.parent = particleParent;\n\n    if (config) {\n      this.init(config);\n    } // save often used functions on the instance instead of the prototype for better speed\n\n\n    this.recycle = this.recycle;\n    this.update = this.update;\n    this.rotate = this.rotate;\n    this.updateSpawnPos = this.updateSpawnPos;\n    this.updateOwnerPos = this.updateOwnerPos;\n  }\n  /**\r\n   * Registers a new behavior, so that it will be recognized when initializing emitters.\r\n   * Behaviors registered later with duplicate types will override older ones, although there is no limit on\r\n   * the allowed types.\r\n   * @param constructor The behavior class to register.\r\n   */\n\n\n  _createClass(Emitter, [{\n    key: \"frequency\",\n    get:\n    /**\r\n     * Time between particle spawns in seconds. If this value is not a number greater than 0,\r\n     * it will be set to 1 (particle per second) to prevent infinite loops.\r\n     */\n    function get() {\n      return this._frequency;\n    },\n    set: function set(value) {\n      // do some error checking to prevent infinite loops\n      if (typeof value === 'number' && value > 0) {\n        this._frequency = value;\n      } else {\n        this._frequency = 1;\n      }\n    }\n    /**\r\n    * The container to add particles to. Settings this will dump any active particles.\r\n    */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this._parent;\n    },\n    set: function set(value) {\n      this.cleanup();\n      this._parent = value;\n    }\n    /**\r\n     * Sets up the emitter based on the config settings.\r\n     * @param config A configuration object containing settings for the emitter.\r\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(config) {\n      if (!config) {\n        return;\n      } // clean up any existing particles\n\n\n      this.cleanup(); // store the original config and particle images, in case we need to re-initialize\n      // when the particle constructor is changed\n\n      this._origConfig = config; // /////////////////////////\n      // Particle Properties    //\n      // /////////////////////////\n      // set up the lifetime\n\n      this.minLifetime = config.lifetime.min;\n      this.maxLifetime = config.lifetime.max; // use the custom ease if provided\n\n      if (config.ease) {\n        this.customEase = typeof config.ease === 'function' ? config.ease : generateEase(config.ease);\n      } else {\n        this.customEase = null;\n      } // ////////////////////////\n      // Emitter Properties    //\n      // ////////////////////////\n      // reset spawn type specific settings\n\n\n      this.particlesPerWave = 1;\n\n      if (config.particlesPerWave && config.particlesPerWave > 1) {\n        this.particlesPerWave = config.particlesPerWave;\n      } // set the spawning frequency\n\n\n      this.frequency = config.frequency;\n      this.spawnChance = typeof config.spawnChance === 'number' && config.spawnChance > 0 ? config.spawnChance : 1; // set the emitter lifetime\n\n      this.emitterLifetime = config.emitterLifetime || -1; // set the max particles\n\n      this.maxParticles = config.maxParticles > 0 ? config.maxParticles : 1000; // determine if we should add the particle at the back of the list or not\n\n      this.addAtBack = !!config.addAtBack; // reset the emitter position and rotation variables\n\n      this.rotation = 0;\n      this.ownerPos.set(0);\n\n      if (config.pos) {\n        this.spawnPos.copyFrom(config.pos);\n      } else {\n        this.spawnPos.set(0);\n      }\n\n      this._prevEmitterPos.copyFrom(this.spawnPos); // previous emitter position is invalid and should not be used for interpolation\n\n\n      this._prevPosIsValid = false; // start emitting\n\n      this._spawnTimer = 0;\n      this.emit = config.emit === undefined ? true : !!config.emit;\n      this.autoUpdate = !!config.autoUpdate; // ////////////////////////\n      // Behaviors             //\n      // ////////////////////////\n\n      var behaviors = config.behaviors.map(function (data) {\n        var constructor = Emitter.knownBehaviors[data.type];\n\n        if (!constructor) {\n          console.error(\"Unknown behavior: \".concat(data.type));\n          return null;\n        }\n\n        return new constructor(data.config);\n      }).filter(function (b) {\n        return !!b;\n      });\n      behaviors.push(PositionParticle);\n      behaviors.sort(function (a, b) {\n        if (a === PositionParticle) {\n          return b.order === BehaviorOrder.Spawn ? 1 : -1;\n        } else if (b === PositionParticle) {\n          return a.order === BehaviorOrder.Spawn ? -1 : 1;\n        }\n\n        return a.order - b.order;\n      });\n      this.initBehaviors = behaviors.slice();\n      this.updateBehaviors = behaviors.filter(function (b) {\n        return b !== PositionParticle && b.updateParticle;\n      });\n      this.recycleBehaviors = behaviors.filter(function (b) {\n        return b !== PositionParticle && b.recycleParticle;\n      });\n    }\n    /**\r\n     * Gets the instantiated behavior of the specified type, if it is present on this emitter.\r\n     * @param type The behavior type to find.\r\n     */\n\n  }, {\n    key: \"getBehavior\",\n    value: function getBehavior(type) {\n      // bail if we don't know about such an emitter\n      if (!Emitter.knownBehaviors[type]) return null; // find one that is an instance of the specified type\n\n      return this.initBehaviors.find(function (b) {\n        return b instanceof Emitter.knownBehaviors[type];\n      }) || null;\n    }\n    /**\r\n     * Fills the pool with the specified number of particles, so that they don't have to be instantiated later.\r\n     * @param count The number of particles to create.\r\n     */\n\n  }, {\n    key: \"fillPool\",\n    value: function fillPool(count) {\n      for (; count > 0; --count) {\n        var p = new Particle(this);\n        p.next = this._poolFirst;\n        this._poolFirst = p;\n      }\n    }\n    /**\r\n     * Recycles an individual particle. For internal use only.\r\n     * @param particle The particle to recycle.\r\n     * @param fromCleanup If this is being called to manually clean up all particles.\r\n     * @internal\r\n     */\n\n  }, {\n    key: \"recycle\",\n    value: function recycle(particle) {\n      var fromCleanup = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      for (var i = 0; i < this.recycleBehaviors.length; ++i) {\n        this.recycleBehaviors[i].recycleParticle(particle, !fromCleanup);\n      }\n\n      if (particle.next) {\n        particle.next.prev = particle.prev;\n      }\n\n      if (particle.prev) {\n        particle.prev.next = particle.next;\n      }\n\n      if (particle === this._activeParticlesLast) {\n        this._activeParticlesLast = particle.prev;\n      }\n\n      if (particle === this._activeParticlesFirst) {\n        this._activeParticlesFirst = particle.next;\n      } // add to pool\n\n\n      particle.prev = null;\n      particle.next = this._poolFirst;\n      this._poolFirst = particle; // remove child from display, or make it invisible if it is in a ParticleContainer\n\n      if (particle.parent) {\n        particle.parent.removeChild(particle);\n      } // decrease count\n\n\n      --this.particleCount;\n    }\n    /**\r\n     * Sets the rotation of the emitter to a new value. This rotates the spawn position in addition\r\n     * to particle direction.\r\n     * @param newRot The new rotation, in degrees.\r\n     */\n\n  }, {\n    key: \"rotate\",\n    value: function rotate(newRot) {\n      if (this.rotation === newRot) return; // caclulate the difference in rotation for rotating spawnPos\n\n      var diff = newRot - this.rotation;\n      this.rotation = newRot; // rotate spawnPos\n\n      rotatePoint(diff, this.spawnPos); // mark the position as having changed\n\n      this._posChanged = true;\n    }\n    /**\r\n     * Changes the spawn position of the emitter.\r\n     * @param x The new x value of the spawn position for the emitter.\r\n     * @param y The new y value of the spawn position for the emitter.\r\n     */\n\n  }, {\n    key: \"updateSpawnPos\",\n    value: function updateSpawnPos(x, y) {\n      this._posChanged = true;\n      this.spawnPos.x = x;\n      this.spawnPos.y = y;\n    }\n    /**\r\n     * Changes the position of the emitter's owner. You should call this if you are adding\r\n     * particles to the world container that your emitter's owner is moving around in.\r\n     * @param x The new x value of the emitter's owner.\r\n     * @param y The new y value of the emitter's owner.\r\n     */\n\n  }, {\n    key: \"updateOwnerPos\",\n    value: function updateOwnerPos(x, y) {\n      this._posChanged = true;\n      this.ownerPos.x = x;\n      this.ownerPos.y = y;\n    }\n    /**\r\n     * Prevents emitter position interpolation in the next update.\r\n     * This should be used if you made a major position change of your emitter's owner\r\n     * that was not normal movement.\r\n     */\n\n  }, {\n    key: \"resetPositionTracking\",\n    value: function resetPositionTracking() {\n      this._prevPosIsValid = false;\n    }\n    /**\r\n     * If particles should be emitted during update() calls. Setting this to false\r\n     * stops new particles from being created, but allows existing ones to die out.\r\n     */\n\n  }, {\n    key: \"emit\",\n    get: function get() {\n      return this._emit;\n    },\n    set: function set(value) {\n      this._emit = !!value;\n      this._emitterLife = this.emitterLifetime;\n    }\n    /**\r\n     * If the update function is called automatically from the shared ticker.\r\n     * Setting this to false requires calling the update function manually.\r\n     */\n\n  }, {\n    key: \"autoUpdate\",\n    get: function get() {\n      return this._autoUpdate;\n    },\n    set: function set(value) {\n      if (this._autoUpdate && !value) {\n        ticker.remove(this.update, this);\n      } else if (!this._autoUpdate && value) {\n        ticker.add(this.update, this);\n      }\n\n      this._autoUpdate = !!value;\n    }\n    /**\r\n     * Starts emitting particles, sets autoUpdate to true, and sets up the Emitter to destroy itself\r\n     * when particle emission is complete.\r\n     * @param callback Callback for when emission is complete (all particles have died off)\r\n     */\n\n  }, {\n    key: \"playOnceAndDestroy\",\n    value: function playOnceAndDestroy(callback) {\n      this.autoUpdate = true;\n      this.emit = true;\n      this._destroyWhenComplete = true;\n      this._completeCallback = callback;\n    }\n    /**\r\n     * Starts emitting particles and optionally calls a callback when particle emission is complete.\r\n     * @param callback Callback for when emission is complete (all particles have died off)\r\n     */\n\n  }, {\n    key: \"playOnce\",\n    value: function playOnce(callback) {\n      this.emit = true;\n      this._completeCallback = callback;\n    }\n    /**\r\n     * Updates all particles spawned by this emitter and emits new ones.\r\n     * @param delta Time elapsed since the previous frame, in __seconds__.\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (this._autoUpdate) {\n        delta = delta / settings.TARGET_FPMS / 1000;\n      } // if we don't have a parent to add particles to, then don't do anything.\n      // this also works as a isDestroyed check\n\n\n      if (!this._parent) return; // == update existing particles ==\n      // update all particle lifetimes before turning them over to behaviors\n\n      for (var particle = this._activeParticlesFirst, next; particle; particle = next) {\n        // save next particle in case we recycle this one\n        next = particle.next; // increase age\n\n        particle.age += delta; // recycle particle if it is too old\n\n        if (particle.age > particle.maxLife || particle.age < 0) {\n          this.recycle(particle);\n        } else {\n          // determine our interpolation value\n          var lerp = particle.age * particle.oneOverLife; // lifetime / maxLife;\n          // global ease affects all interpolation calculations\n\n          if (this.customEase) {\n            if (this.customEase.length === 4) {\n              // the t, b, c, d parameters that some tween libraries use\n              // (time, initial value, end value, duration)\n              lerp = this.customEase(lerp, 0, 1, 1);\n            } else {\n              // the simplified version that we like that takes\n              // one parameter, time from 0-1. TweenJS eases provide this usage.\n              lerp = this.customEase(lerp);\n            }\n          } // set age percent for all interpolation calculations\n\n\n          particle.agePercent = lerp; // let each behavior run wild on the active particles\n\n          for (var i = 0; i < this.updateBehaviors.length; ++i) {\n            if (this.updateBehaviors[i].updateParticle(particle, delta)) {\n              this.recycle(particle);\n              break;\n            }\n          }\n        }\n      }\n\n      var prevX;\n      var prevY; // if the previous position is valid, store these for later interpolation\n\n      if (this._prevPosIsValid) {\n        prevX = this._prevEmitterPos.x;\n        prevY = this._prevEmitterPos.y;\n      } // store current position of the emitter as local variables\n\n\n      var curX = this.ownerPos.x + this.spawnPos.x;\n      var curY = this.ownerPos.y + this.spawnPos.y; // spawn new particles\n\n      if (this._emit) {\n        // decrease spawn timer\n        this._spawnTimer -= delta < 0 ? 0 : delta; // while _spawnTimer < 0, we have particles to spawn\n\n        while (this._spawnTimer <= 0) {\n          // determine if the emitter should stop spawning\n          if (this._emitterLife >= 0) {\n            this._emitterLife -= this._frequency;\n\n            if (this._emitterLife <= 0) {\n              this._spawnTimer = 0;\n              this._emitterLife = 0;\n              this.emit = false;\n              break;\n            }\n          } // determine if we have hit the particle limit\n\n\n          if (this.particleCount >= this.maxParticles) {\n            this._spawnTimer += this._frequency;\n            continue;\n          }\n\n          var emitPosX = void 0;\n          var emitPosY = void 0; // If the position has changed and this isn't the first spawn,\n          // interpolate the spawn position\n\n          if (this._prevPosIsValid && this._posChanged) {\n            // 1 - _spawnTimer / delta, but _spawnTimer is negative\n            var _lerp = 1 + this._spawnTimer / delta;\n\n            emitPosX = (curX - prevX) * _lerp + prevX;\n            emitPosY = (curY - prevY) * _lerp + prevY;\n          } // otherwise just set to the spawn position\n          else {\n            emitPosX = curX;\n            emitPosY = curY;\n          }\n\n          var waveFirst = null;\n          var waveLast = null; // create enough particles to fill the wave\n\n          for (var len = Math.min(this.particlesPerWave, this.maxParticles - this.particleCount), _i = 0; _i < len; ++_i) {\n            // see if we actually spawn one\n            if (this.spawnChance < 1 && Math.random() >= this.spawnChance) {\n              continue;\n            } // determine the particle lifetime\n\n\n            var lifetime = void 0;\n\n            if (this.minLifetime === this.maxLifetime) {\n              lifetime = this.minLifetime;\n            } else {\n              lifetime = Math.random() * (this.maxLifetime - this.minLifetime) + this.minLifetime;\n            } // only make the particle if it wouldn't immediately destroy itself\n\n\n            if (-this._spawnTimer >= lifetime) {\n              continue;\n            } // create particle\n\n\n            var p = void 0;\n\n            if (this._poolFirst) {\n              p = this._poolFirst;\n              this._poolFirst = this._poolFirst.next;\n              p.next = null;\n            } else {\n              p = new Particle(this);\n            } // initialize particle\n\n\n            p.init(lifetime); // add the particle to the display list\n\n            if (this.addAtBack) {\n              this._parent.addChildAt(p, 0);\n            } else {\n              this._parent.addChild(p);\n            } // add particles to list of ones in this wave\n\n\n            if (waveFirst) {\n              waveLast.next = p;\n              p.prev = waveLast;\n              waveLast = p;\n            } else {\n              waveLast = waveFirst = p;\n            } // increase our particle count\n\n\n            ++this.particleCount;\n          }\n\n          if (waveFirst) {\n            // add particle to list of active particles\n            if (this._activeParticlesLast) {\n              this._activeParticlesLast.next = waveFirst;\n              waveFirst.prev = this._activeParticlesLast;\n              this._activeParticlesLast = waveLast;\n            } else {\n              this._activeParticlesFirst = waveFirst;\n              this._activeParticlesLast = waveLast;\n            } // run behavior init on particles\n\n\n            for (var _i2 = 0; _i2 < this.initBehaviors.length; ++_i2) {\n              var behavior = this.initBehaviors[_i2]; // if we hit our special key, interrupt behaviors to apply\n              // emitter position/rotation\n\n              if (behavior === PositionParticle) {\n                for (var _particle = waveFirst, _next; _particle; _particle = _next) {\n                  // save next particle in case we recycle this one\n                  _next = _particle.next; // rotate the particle's position by the emitter's rotation\n\n                  if (this.rotation !== 0) {\n                    rotatePoint(this.rotation, _particle.position);\n                    _particle.rotation += this.rotation;\n                  } // offset by the emitter's position\n\n\n                  _particle.position.x += emitPosX;\n                  _particle.position.y += emitPosY; // also, just update the particle's age properties while we are looping through\n\n                  _particle.age += -this._spawnTimer; // determine our interpolation value\n\n                  var _lerp2 = _particle.age * _particle.oneOverLife; // lifetime / maxLife;\n                  // global ease affects all interpolation calculations\n\n\n                  if (this.customEase) {\n                    if (this.customEase.length === 4) {\n                      // the t, b, c, d parameters that some tween libraries use\n                      // (time, initial value, end value, duration)\n                      _lerp2 = this.customEase(_lerp2, 0, 1, 1);\n                    } else {\n                      // the simplified version that we like that takes\n                      // one parameter, time from 0-1. TweenJS eases provide this usage.\n                      _lerp2 = this.customEase(_lerp2);\n                    }\n                  } // set age percent for all interpolation calculations\n\n\n                  _particle.agePercent = _lerp2;\n                }\n              } else {\n                behavior.initParticles(waveFirst);\n              }\n            }\n\n            for (var _particle2 = waveFirst, _next2; _particle2; _particle2 = _next2) {\n              // save next particle in case we recycle this one\n              _next2 = _particle2.next; // now update the particles by the time passed, so the particles are spread out properly\n\n              for (var _i3 = 0; _i3 < this.updateBehaviors.length; ++_i3) {\n                // we want a positive delta, because a negative delta messes things up\n                if (this.updateBehaviors[_i3].updateParticle(_particle2, -this._spawnTimer)) {\n                  // bail if the particle got reycled\n                  this.recycle(_particle2);\n                  break;\n                }\n              }\n            }\n          } // increase timer and continue on to any other particles that need to be created\n\n\n          this._spawnTimer += this._frequency;\n        }\n      } // if the position changed before this update, then keep track of that\n\n\n      if (this._posChanged) {\n        this._prevEmitterPos.x = curX;\n        this._prevEmitterPos.y = curY;\n        this._prevPosIsValid = true;\n        this._posChanged = false;\n      } // if we are all done and should destroy ourselves, take care of that\n\n\n      if (!this._emit && !this._activeParticlesFirst) {\n        if (this._completeCallback) {\n          var cb = this._completeCallback;\n          this._completeCallback = null;\n          cb();\n        }\n\n        if (this._destroyWhenComplete) {\n          this.destroy();\n        }\n      }\n    }\n    /**\r\n     * Emits a single wave of particles, using standard spawnChance & particlesPerWave settings. Does not affect\r\n     * regular spawning through the frequency, and ignores the emit property. The max particle count is respected, however,\r\n     * so if there are already too many particles then nothing will happen.\r\n     */\n\n  }, {\n    key: \"emitNow\",\n    value: function emitNow() {\n      var emitPosX = this.ownerPos.x + this.spawnPos.x;\n      var emitPosY = this.ownerPos.y + this.spawnPos.y;\n      var waveFirst = null;\n      var waveLast = null; // create enough particles to fill the wave\n\n      for (var len = Math.min(this.particlesPerWave, this.maxParticles - this.particleCount), i = 0; i < len; ++i) {\n        // see if we actually spawn one\n        if (this.spawnChance < 1 && Math.random() >= this.spawnChance) {\n          continue;\n        } // create particle\n\n\n        var p = void 0;\n\n        if (this._poolFirst) {\n          p = this._poolFirst;\n          this._poolFirst = this._poolFirst.next;\n          p.next = null;\n        } else {\n          p = new Particle(this);\n        }\n\n        var lifetime = void 0;\n\n        if (this.minLifetime === this.maxLifetime) {\n          lifetime = this.minLifetime;\n        } else {\n          lifetime = Math.random() * (this.maxLifetime - this.minLifetime) + this.minLifetime;\n        } // initialize particle\n\n\n        p.init(lifetime); // add the particle to the display list\n\n        if (this.addAtBack) {\n          this._parent.addChildAt(p, 0);\n        } else {\n          this._parent.addChild(p);\n        } // add particles to list of ones in this wave\n\n\n        if (waveFirst) {\n          waveLast.next = p;\n          p.prev = waveLast;\n          waveLast = p;\n        } else {\n          waveLast = waveFirst = p;\n        } // increase our particle count\n\n\n        ++this.particleCount;\n      }\n\n      if (waveFirst) {\n        // add particle to list of active particles\n        if (this._activeParticlesLast) {\n          this._activeParticlesLast.next = waveFirst;\n          waveFirst.prev = this._activeParticlesLast;\n          this._activeParticlesLast = waveLast;\n        } else {\n          this._activeParticlesFirst = waveFirst;\n          this._activeParticlesLast = waveLast;\n        } // run behavior init on particles\n\n\n        for (var _i4 = 0; _i4 < this.initBehaviors.length; ++_i4) {\n          var behavior = this.initBehaviors[_i4]; // if we hit our special key, interrupt behaviors to apply\n          // emitter position/rotation\n\n          if (behavior === PositionParticle) {\n            for (var particle = waveFirst, next; particle; particle = next) {\n              // save next particle in case we recycle this one\n              next = particle.next; // rotate the particle's position by the emitter's rotation\n\n              if (this.rotation !== 0) {\n                rotatePoint(this.rotation, particle.position);\n                particle.rotation += this.rotation;\n              } // offset by the emitter's position\n\n\n              particle.position.x += emitPosX;\n              particle.position.y += emitPosY;\n            }\n          } else {\n            behavior.initParticles(waveFirst);\n          }\n        }\n      }\n    }\n    /**\r\n     * Kills all active particles immediately.\r\n     */\n\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      var particle;\n      var next;\n\n      for (particle = this._activeParticlesFirst; particle; particle = next) {\n        next = particle.next;\n        this.recycle(particle, true);\n      }\n\n      this._activeParticlesFirst = this._activeParticlesLast = null;\n      this.particleCount = 0;\n    }\n    /**\r\n     * If this emitter has been destroyed. Note that a destroyed emitter can still be reused, after\r\n     * having a new parent set and being reinitialized.\r\n     */\n\n  }, {\n    key: \"destroyed\",\n    get: function get() {\n      return !(this._parent && this.initBehaviors.length);\n    }\n    /**\r\n     * Destroys the emitter and all of its particles.\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // make sure we aren't still listening to any tickers\n      this.autoUpdate = false; // puts all active particles in the pool, and removes them from the particle parent\n\n      this.cleanup(); // wipe the pool clean\n\n      var next;\n\n      for (var particle = this._poolFirst; particle; particle = next) {\n        // store next value so we don't lose it in our destroy call\n        next = particle.next;\n        particle.destroy();\n      }\n\n      this._poolFirst = this._parent = this.spawnPos = this.ownerPos = this.customEase = this._completeCallback = null;\n      this.initBehaviors.length = this.updateBehaviors.length = this.recycleBehaviors.length = 0;\n    }\n  }], [{\n    key: \"registerBehavior\",\n    value: function registerBehavior(constructor) {\n      Emitter.knownBehaviors[constructor.type] = constructor;\n    }\n  }]);\n\n  return Emitter;\n}();\n\nEmitter.knownBehaviors = {};\n/**\r\n * A SpawnShape that randomly picks locations inside a rectangle.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'rect',\r\n *     data: {\r\n *          x: 0,\r\n *          y: 0,\r\n *          w: 10,\r\n *          h: 100\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar Rectangle = /*#__PURE__*/function () {\n  function Rectangle(config) {\n    _classCallCheck(this, Rectangle);\n\n    this.x = config.x;\n    this.y = config.y;\n    this.w = config.w;\n    this.h = config.h;\n  }\n\n  _createClass(Rectangle, [{\n    key: \"getRandPos\",\n    value: function getRandPos(particle) {\n      // place the particle at a random point in the rectangle\n      particle.x = Math.random() * this.w + this.x;\n      particle.y = Math.random() * this.h + this.y;\n    }\n  }]);\n\n  return Rectangle;\n}();\n\nRectangle.type = 'rect';\nRectangle.editorConfig = null;\n/**\r\n * A class for spawning particles in a circle or ring.\r\n * Can optionally apply rotation to particles so that they are aimed away from the center of the circle.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'torus',\r\n *     data: {\r\n *          radius: 30,\r\n *          x: 0,\r\n *          y: 0,\r\n *          innerRadius: 10,\r\n *          rotation: true\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar Torus = /*#__PURE__*/function () {\n  function Torus(config) {\n    _classCallCheck(this, Torus);\n\n    this.x = config.x || 0;\n    this.y = config.y || 0;\n    this.radius = config.radius;\n    this.innerRadius = config.innerRadius || 0;\n    this.rotation = !!config.affectRotation;\n  }\n\n  _createClass(Torus, [{\n    key: \"getRandPos\",\n    value: function getRandPos(particle) {\n      // place the particle at a random radius in the ring\n      if (this.innerRadius !== this.radius) {\n        particle.x = Math.random() * (this.radius - this.innerRadius) + this.innerRadius;\n      } else {\n        particle.x = this.radius;\n      }\n\n      particle.y = 0; // rotate the point to a random angle in the circle\n\n      var angle = Math.random() * Math.PI * 2;\n\n      if (this.rotation) {\n        particle.rotation += angle;\n      }\n\n      rotatePoint(angle, particle.position); // now add in the center of the torus\n\n      particle.position.x += this.x;\n      particle.position.y += this.y;\n    }\n  }]);\n\n  return Torus;\n}();\n\nTorus.type = 'torus';\nTorus.editorConfig = null;\n/**\r\n * A spawn shape that picks a random position along a series of line segments. If those\r\n * line segments form a polygon, particles will only be placed on the perimeter of that polygon.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *      type: 'polygonalChain',\r\n *      data: [\r\n *          [{x: 0, y: 0}, {x: 10, y: 10}, {x: 20, y: 0}],\r\n *          [{x: 0, y, -10}, {x: 10, y: 0}, {x: 20, y: -10}]\r\n *      ]\r\n * }\r\n * ```\r\n */\n\nvar PolygonalChain = /*#__PURE__*/function () {\n  /**\r\n   * @param data Point data for polygon chains. Either a list of points for a single chain, or a list of chains.\r\n   */\n  function PolygonalChain(data) {\n    _classCallCheck(this, PolygonalChain);\n\n    this.segments = [];\n    this.countingLengths = [];\n    this.totalLength = 0;\n    this.init(data);\n  }\n  /**\r\n   * @param data Point data for polygon chains. Either a list of points for a single chain, or a list of chains.\r\n   */\n\n\n  _createClass(PolygonalChain, [{\n    key: \"init\",\n    value: function init(data) {\n      // if data is not present, set up a segment of length 0\n      if (!data || !data.length) {\n        this.segments.push({\n          p1: {\n            x: 0,\n            y: 0\n          },\n          p2: {\n            x: 0,\n            y: 0\n          },\n          l: 0\n        });\n      } else if (Array.isArray(data[0])) {\n        // list of segment chains, each defined as a list of points\n        for (var i = 0; i < data.length; ++i) {\n          // loop through the chain, connecting points\n          var chain = data[i];\n          var prevPoint = chain[0];\n\n          for (var j = 1; j < chain.length; ++j) {\n            var second = chain[j];\n            this.segments.push({\n              p1: prevPoint,\n              p2: second,\n              l: 0\n            });\n            prevPoint = second;\n          }\n        }\n      } else {\n        var _prevPoint = data[0]; // list of points\n\n        for (var _i5 = 1; _i5 < data.length; ++_i5) {\n          var _second = data[_i5];\n          this.segments.push({\n            p1: _prevPoint,\n            p2: _second,\n            l: 0\n          });\n          _prevPoint = _second;\n        }\n      } // now go through our segments to calculate the lengths so that we\n      // can set up a nice weighted random distribution\n\n\n      for (var _i6 = 0; _i6 < this.segments.length; ++_i6) {\n        var _this$segments$_i = this.segments[_i6],\n            p1 = _this$segments$_i.p1,\n            p2 = _this$segments$_i.p2;\n        var segLength = Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y)); // save length so we can turn a random number into a 0-1 interpolation value later\n\n        this.segments[_i6].l = segLength;\n        this.totalLength += segLength; // keep track of the length so far, counting up\n\n        this.countingLengths.push(this.totalLength);\n      }\n    }\n    /**\r\n     * Gets a random point in the chain.\r\n     * @param out The point to store the selected position in.\r\n     */\n\n  }, {\n    key: \"getRandPos\",\n    value: function getRandPos(out) {\n      // select a random spot in the length of the chain\n      var rand = Math.random() * this.totalLength;\n      var chosenSeg;\n      var lerp; // if only one segment, it wins\n\n      if (this.segments.length === 1) {\n        chosenSeg = this.segments[0];\n        lerp = rand;\n      } else {\n        // otherwise, go through countingLengths until we have determined\n        // which segment we chose\n        for (var i = 0; i < this.countingLengths.length; ++i) {\n          if (rand < this.countingLengths[i]) {\n            chosenSeg = this.segments[i]; // set lerp equal to the length into that segment\n            // (i.e. the remainder after subtracting all the segments before it)\n\n            lerp = i === 0 ? rand : rand - this.countingLengths[i - 1];\n            break;\n          }\n        }\n      } // divide lerp by the segment length, to result in a 0-1 number.\n\n\n      lerp /= chosenSeg.l || 1;\n      var _chosenSeg = chosenSeg,\n          p1 = _chosenSeg.p1,\n          p2 = _chosenSeg.p2; // now calculate the position in the segment that the lerp value represents\n\n      out.x = p1.x + lerp * (p2.x - p1.x);\n      out.y = p1.y + lerp * (p2.y - p1.y);\n    }\n  }]);\n\n  return PolygonalChain;\n}();\n\nPolygonalChain.type = 'polygonalChain';\nPolygonalChain.editorConfig = null;\nvar index = {\n  __proto__: null,\n  Rectangle: Rectangle,\n  Torus: Torus,\n  PolygonalChain: PolygonalChain\n};\nvar Types = {\n  __proto__: null\n};\n/**\r\n * A Movement behavior that handles movement by applying a constant acceleration to all particles.\r\n *\r\n * Example configuration:\r\n * ```javascript\r\n * {\r\n *     \"type\": \"moveAcceleration\",\r\n *     \"config\": {\r\n *          \"accel\": {\r\n *               \"x\": 0,\r\n *               \"y\": 2000\r\n *          },\r\n *          \"minStart\": 600,\r\n *          \"maxStart\": 600,\r\n *          \"rotate\": true\r\n *     }\r\n *}\r\n * ```\r\n */\n\nvar AccelerationBehavior = /*#__PURE__*/function () {\n  function AccelerationBehavior(config) {\n    _classCallCheck(this, AccelerationBehavior);\n\n    var _a; // doesn't _really_ need to be late, but doing so ensures that we can override any\n    // rotation behavior that is mistakenly added\n\n\n    this.order = BehaviorOrder.Late;\n    this.minStart = config.minStart;\n    this.maxStart = config.maxStart;\n    this.accel = config.accel;\n    this.rotate = !!config.rotate;\n    this.maxSpeed = (_a = config.maxSpeed) !== null && _a !== void 0 ? _a : 0;\n  }\n\n  _createClass(AccelerationBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        var speed = Math.random() * (this.maxStart - this.minStart) + this.minStart;\n\n        if (!next.config.velocity) {\n          next.config.velocity = new Point(speed, 0);\n        } else {\n          next.config.velocity.set(speed, 0);\n        }\n\n        rotatePoint(next.rotation, next.config.velocity);\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle, deltaSec) {\n      var vel = particle.config.velocity;\n      var oldVX = vel.x;\n      var oldVY = vel.y;\n      vel.x += this.accel.x * deltaSec;\n      vel.y += this.accel.y * deltaSec;\n\n      if (this.maxSpeed) {\n        var currentSpeed = length(vel); // if we are going faster than we should, clamp at the max speed\n        // DO NOT recalculate vector length\n\n        if (currentSpeed > this.maxSpeed) {\n          scaleBy(vel, this.maxSpeed / currentSpeed);\n        }\n      } // calculate position delta by the midpoint between our old velocity and our new velocity\n\n\n      particle.x += (oldVX + vel.x) / 2 * deltaSec;\n      particle.y += (oldVY + vel.y) / 2 * deltaSec;\n\n      if (this.rotate) {\n        particle.rotation = Math.atan2(vel.y, vel.x);\n      }\n    }\n  }]);\n\n  return AccelerationBehavior;\n}();\n\nAccelerationBehavior.type = 'moveAcceleration';\nAccelerationBehavior.editorConfig = null;\n\nfunction intValueSimple(lerp) {\n  if (this.ease) lerp = this.ease(lerp);\n  return (this.first.next.value - this.first.value) * lerp + this.first.value;\n}\n\nfunction intColorSimple(lerp) {\n  if (this.ease) lerp = this.ease(lerp);\n  var curVal = this.first.value;\n  var nextVal = this.first.next.value;\n  var r = (nextVal.r - curVal.r) * lerp + curVal.r;\n  var g = (nextVal.g - curVal.g) * lerp + curVal.g;\n  var b = (nextVal.b - curVal.b) * lerp + curVal.b;\n  return combineRGBComponents(r, g, b);\n}\n\nfunction intValueComplex(lerp) {\n  if (this.ease) lerp = this.ease(lerp); // make sure we are on the right segment\n\n  var current = this.first;\n  var next = current.next;\n\n  while (lerp > next.time) {\n    current = next;\n    next = next.next;\n  } // convert the lerp value to the segment range\n\n\n  lerp = (lerp - current.time) / (next.time - current.time);\n  return (next.value - current.value) * lerp + current.value;\n}\n\nfunction intColorComplex(lerp) {\n  if (this.ease) lerp = this.ease(lerp); // make sure we are on the right segment\n\n  var current = this.first;\n  var next = current.next;\n\n  while (lerp > next.time) {\n    current = next;\n    next = next.next;\n  } // convert the lerp value to the segment range\n\n\n  lerp = (lerp - current.time) / (next.time - current.time);\n  var curVal = current.value;\n  var nextVal = next.value;\n  var r = (nextVal.r - curVal.r) * lerp + curVal.r;\n  var g = (nextVal.g - curVal.g) * lerp + curVal.g;\n  var b = (nextVal.b - curVal.b) * lerp + curVal.b;\n  return combineRGBComponents(r, g, b);\n}\n\nfunction intValueStepped(lerp) {\n  if (this.ease) lerp = this.ease(lerp); // make sure we are on the right segment\n\n  var current = this.first;\n\n  while (current.next && lerp > current.next.time) {\n    current = current.next;\n  }\n\n  return current.value;\n}\n\nfunction intColorStepped(lerp) {\n  if (this.ease) lerp = this.ease(lerp); // make sure we are on the right segment\n\n  var current = this.first;\n\n  while (current.next && lerp > current.next.time) {\n    current = current.next;\n  }\n\n  var curVal = current.value;\n  return combineRGBComponents(curVal.r, curVal.g, curVal.b);\n}\n/**\r\n * Singly linked list container for keeping track of interpolated properties for particles.\r\n * Each Particle will have one of these for each interpolated property.\r\n */\n\n\nvar PropertyList = /*#__PURE__*/function () {\n  /**\r\n   * @param isColor If this list handles color values\r\n   */\n  function PropertyList() {\n    var isColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    _classCallCheck(this, PropertyList);\n\n    this.first = null;\n    this.isColor = !!isColor;\n    this.interpolate = null;\n    this.ease = null;\n  }\n  /**\r\n   * Resets the list for use.\r\n   * @param first The first node in the list.\r\n   * @param first.isStepped If the values should be stepped instead of interpolated linearly.\r\n   */\n\n\n  _createClass(PropertyList, [{\n    key: \"reset\",\n    value: function reset(first) {\n      this.first = first;\n      var isSimple = first.next && first.next.time >= 1;\n\n      if (isSimple) {\n        this.interpolate = this.isColor ? intColorSimple : intValueSimple;\n      } else if (first.isStepped) {\n        this.interpolate = this.isColor ? intColorStepped : intValueStepped;\n      } else {\n        this.interpolate = this.isColor ? intColorComplex : intValueComplex;\n      }\n\n      this.ease = this.first.ease;\n    }\n  }]);\n\n  return PropertyList;\n}();\n/**\r\n * An Alpha behavior that applies an interpolated or stepped list of values to the particle's opacity.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'alpha',\r\n *     config: {\r\n *         alpha: {\r\n *              list: [{value: 0, time: 0}, {value: 1, time: 0.25}, {value: 0, time: 1}]\r\n *         },\r\n *     }\r\n * }\r\n * ```\r\n */\n\n\nvar AlphaBehavior = /*#__PURE__*/function () {\n  function AlphaBehavior(config) {\n    _classCallCheck(this, AlphaBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.list = new PropertyList(false);\n    this.list.reset(PropertyNode.createList(config.alpha));\n  }\n\n  _createClass(AlphaBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        next.alpha = this.list.first.value;\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle) {\n      particle.alpha = this.list.interpolate(particle.agePercent);\n    }\n  }]);\n\n  return AlphaBehavior;\n}();\n\nAlphaBehavior.type = 'alpha';\nAlphaBehavior.editorConfig = null;\n/**\r\n * An Alpha behavior that applies a static value to the particle's opacity at particle initialization.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'alphaStatic',\r\n *     config: {\r\n *         alpha: 0.75,\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar StaticAlphaBehavior = /*#__PURE__*/function () {\n  function StaticAlphaBehavior(config) {\n    _classCallCheck(this, StaticAlphaBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.value = config.alpha;\n  }\n\n  _createClass(StaticAlphaBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        next.alpha = this.value;\n        next = next.next;\n      }\n    }\n  }]);\n\n  return StaticAlphaBehavior;\n}();\n\nStaticAlphaBehavior.type = 'alphaStatic';\nStaticAlphaBehavior.editorConfig = null;\n\nfunction getTextures(textures) {\n  var outTextures = [];\n\n  for (var j = 0; j < textures.length; ++j) {\n    var tex = textures[j];\n\n    if (typeof tex === 'string') {\n      outTextures.push(GetTextureFromString(tex));\n    } else if (tex instanceof Texture) {\n      outTextures.push(tex);\n    } // assume an object with extra data determining duplicate frame data\n    else {\n      var dupe = tex.count || 1;\n\n      if (typeof tex.texture === 'string') {\n        tex = GetTextureFromString(tex.texture);\n      } else // if(tex.texture instanceof Texture)\n        {\n          tex = tex.texture;\n        }\n\n      for (; dupe > 0; --dupe) {\n        outTextures.push(tex);\n      }\n    }\n  }\n\n  return outTextures;\n}\n/**\r\n * A Texture behavior that picks a random animation for each particle to play.\r\n * See {@link AnimatedParticleArt} for detailed configuration info.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'animatedRandom',\r\n *     config: {\r\n *         anims: [\r\n *              {\r\n *                  framerate: 25,\r\n *                  loop: true,\r\n *                  textures: ['frame1', 'frame2', 'frame3']\r\n *              },\r\n *              {\r\n *                  framerate: 25,\r\n *                  loop: true,\r\n *                  textures: ['frame3', 'frame2', 'frame1']\r\n *              }\r\n *         ],\r\n *     }\r\n * }\r\n * ```\r\n */\n\n\nvar RandomAnimatedTextureBehavior = /*#__PURE__*/function () {\n  function RandomAnimatedTextureBehavior(config) {\n    _classCallCheck(this, RandomAnimatedTextureBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.anims = [];\n\n    for (var i = 0; i < config.anims.length; ++i) {\n      var anim = config.anims[i];\n      var textures = getTextures(anim.textures); // eslint-disable-next-line no-nested-ternary\n\n      var framerate = anim.framerate < 0 ? -1 : anim.framerate > 0 ? anim.framerate : 60;\n      var parsedAnim = {\n        textures: textures,\n        duration: framerate > 0 ? textures.length / framerate : 0,\n        framerate: framerate,\n        loop: framerate > 0 ? !!anim.loop : false\n      };\n      this.anims.push(parsedAnim);\n    }\n  }\n\n  _createClass(RandomAnimatedTextureBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        var _index = Math.floor(Math.random() * this.anims.length);\n\n        var anim = next.config.anim = this.anims[_index];\n        next.texture = anim.textures[0];\n        next.config.animElapsed = 0; // if anim should match particle life exactly\n\n        if (anim.framerate === -1) {\n          next.config.animDuration = next.maxLife;\n          next.config.animFramerate = anim.textures.length / next.maxLife;\n        } else {\n          next.config.animDuration = anim.duration;\n          next.config.animFramerate = anim.framerate;\n        }\n\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle, deltaSec) {\n      var config = particle.config;\n      var anim = config.anim;\n      config.animElapsed += deltaSec;\n\n      if (config.animElapsed >= config.animDuration) {\n        // loop elapsed back around\n        if (config.anim.loop) {\n          config.animElapsed = config.animElapsed % config.animDuration;\n        } // subtract a small amount to prevent attempting to go past the end of the animation\n        else {\n          config.animElapsed = config.animDuration - 0.000001;\n        }\n      } // add a very small number to the frame and then floor it to avoid\n      // the frame being one short due to floating point errors.\n\n\n      var frame = config.animElapsed * config.animFramerate + 0.0000001 | 0; // in the very rare case that framerate * elapsed math ends up going past the end, use the last texture\n\n      particle.texture = anim.textures[frame] || anim.textures[anim.textures.length - 1] || Texture.EMPTY;\n    }\n  }]);\n\n  return RandomAnimatedTextureBehavior;\n}();\n\nRandomAnimatedTextureBehavior.type = 'animatedRandom';\nRandomAnimatedTextureBehavior.editorConfig = null;\n/**\r\n * A Texture behavior that uses a single animation for each particle to play.\r\n * See {@link AnimatedParticleArt} for detailed configuration info.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'animatedSingle',\r\n *     config: {\r\n *         anim: {\r\n *              framerate: 25,\r\n *              loop: true,\r\n *              textures: ['frame1', 'frame2', 'frame3']\r\n *         }\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar SingleAnimatedTextureBehavior = /*#__PURE__*/function () {\n  function SingleAnimatedTextureBehavior(config) {\n    _classCallCheck(this, SingleAnimatedTextureBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    var anim = config.anim;\n    var textures = getTextures(anim.textures); // eslint-disable-next-line no-nested-ternary\n\n    var framerate = anim.framerate < 0 ? -1 : anim.framerate > 0 ? anim.framerate : 60;\n    this.anim = {\n      textures: textures,\n      duration: framerate > 0 ? textures.length / framerate : 0,\n      framerate: framerate,\n      loop: framerate > 0 ? !!anim.loop : false\n    };\n  }\n\n  _createClass(SingleAnimatedTextureBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n      var anim = this.anim;\n\n      while (next) {\n        next.texture = anim.textures[0];\n        next.config.animElapsed = 0; // if anim should match particle life exactly\n\n        if (anim.framerate === -1) {\n          next.config.animDuration = next.maxLife;\n          next.config.animFramerate = anim.textures.length / next.maxLife;\n        } else {\n          next.config.animDuration = anim.duration;\n          next.config.animFramerate = anim.framerate;\n        }\n\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle, deltaSec) {\n      var anim = this.anim;\n      var config = particle.config;\n      config.animElapsed += deltaSec;\n\n      if (config.animElapsed >= config.animDuration) {\n        // loop elapsed back around\n        if (anim.loop) {\n          config.animElapsed = config.animElapsed % config.animDuration;\n        } // subtract a small amount to prevent attempting to go past the end of the animation\n        else {\n          config.animElapsed = config.animDuration - 0.000001;\n        }\n      } // add a very small number to the frame and then floor it to avoid\n      // the frame being one short due to floating point errors.\n\n\n      var frame = config.animElapsed * config.animFramerate + 0.0000001 | 0; // in the very rare case that framerate * elapsed math ends up going past the end, use the last texture\n\n      particle.texture = anim.textures[frame] || anim.textures[anim.textures.length - 1] || Texture.EMPTY;\n    }\n  }]);\n\n  return SingleAnimatedTextureBehavior;\n}();\n\nSingleAnimatedTextureBehavior.type = 'animatedSingle';\nSingleAnimatedTextureBehavior.editorConfig = null;\n/**\r\n * A Blend Mode behavior that applies a blend mode value to the particle at initialization.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'blendMode',\r\n *     config: {\r\n *         blendMode: 'multiply',\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar BlendModeBehavior = /*#__PURE__*/function () {\n  function BlendModeBehavior(config) {\n    _classCallCheck(this, BlendModeBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.value = config.blendMode;\n  }\n\n  _createClass(BlendModeBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        next.blendMode = getBlendMode(this.value);\n        next = next.next;\n      }\n    }\n  }]);\n\n  return BlendModeBehavior;\n}();\n\nBlendModeBehavior.type = 'blendMode';\nBlendModeBehavior.editorConfig = null;\n/**\r\n * A Spawn behavior that sends particles out from a single point or ring, and is capable of evenly spacing\r\n * the particle's starting angles.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'spawnBurst',\r\n *     config: {\r\n *          spacing: 90,\r\n *          start: 0,\r\n *          distance: 40,\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar BurstSpawnBehavior = /*#__PURE__*/function () {\n  function BurstSpawnBehavior(config) {\n    _classCallCheck(this, BurstSpawnBehavior);\n\n    this.order = BehaviorOrder.Spawn;\n    this.spacing = config.spacing * DEG_TO_RADS;\n    this.start = config.start * DEG_TO_RADS;\n    this.distance = config.distance;\n  }\n\n  _createClass(BurstSpawnBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var count = 0;\n      var next = first;\n\n      while (next) {\n        var angle = void 0;\n\n        if (this.spacing) {\n          angle = this.start + this.spacing * count;\n        } else {\n          angle = Math.random() * Math.PI * 2;\n        }\n\n        next.rotation = angle;\n\n        if (this.distance) {\n          next.position.x = this.distance;\n          rotatePoint(angle, next.position);\n        }\n\n        next = next.next;\n        ++count;\n      }\n    }\n  }]);\n\n  return BurstSpawnBehavior;\n}();\n\nBurstSpawnBehavior.type = 'spawnBurst';\nBurstSpawnBehavior.editorConfig = null;\n/**\r\n * A Color behavior that applies an interpolated or stepped list of values to the particle's tint property.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'color',\r\n *     config: {\r\n *         color: {\r\n *              list: [{value: '#ff0000' time: 0}, {value: '#00ff00', time: 0.5}, {value: '#0000ff', time: 1}]\r\n *         },\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar ColorBehavior = /*#__PURE__*/function () {\n  function ColorBehavior(config) {\n    _classCallCheck(this, ColorBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.list = new PropertyList(true);\n    this.list.reset(PropertyNode.createList(config.color));\n  }\n\n  _createClass(ColorBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n      var color = this.list.first.value;\n      var tint = combineRGBComponents(color.r, color.g, color.b);\n\n      while (next) {\n        next.tint = tint;\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle) {\n      particle.tint = this.list.interpolate(particle.agePercent);\n    }\n  }]);\n\n  return ColorBehavior;\n}();\n\nColorBehavior.type = 'color';\nColorBehavior.editorConfig = null;\n/**\r\n * A Color behavior that applies a single color to the particle's tint property at initialization.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'colorStatic',\r\n *     config: {\r\n *         color: '#ffff00',\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar StaticColorBehavior = /*#__PURE__*/function () {\n  function StaticColorBehavior(config) {\n    _classCallCheck(this, StaticColorBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    var color = config.color;\n\n    if (color.charAt(0) === '#') {\n      color = color.substr(1);\n    } else if (color.indexOf('0x') === 0) {\n      color = color.substr(2);\n    }\n\n    this.value = parseInt(color, 16);\n  }\n\n  _createClass(StaticColorBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        next.tint = this.value;\n        next = next.next;\n      }\n    }\n  }]);\n\n  return StaticColorBehavior;\n}();\n\nStaticColorBehavior.type = 'colorStatic';\nStaticColorBehavior.editorConfig = null;\n/**\r\n * A Texture behavior that assigns a texture to each particle from its list, in order, before looping around to the first\r\n * texture again. String values will be converted to textures with {@link ParticleUtils.GetTextureFromString}.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'textureOrdered',\r\n *     config: {\r\n *         textures: [\"myTex1Id\", \"myTex2Id\", \"myTex3Id\", \"myTex4Id\"],\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar OrderedTextureBehavior = /*#__PURE__*/function () {\n  function OrderedTextureBehavior(config) {\n    _classCallCheck(this, OrderedTextureBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.index = 0;\n    this.textures = config.textures.map(function (tex) {\n      return typeof tex === 'string' ? GetTextureFromString(tex) : tex;\n    });\n  }\n\n  _createClass(OrderedTextureBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        next.texture = this.textures[this.index];\n\n        if (++this.index >= this.textures.length) {\n          this.index = 0;\n        }\n\n        next = next.next;\n      }\n    }\n  }]);\n\n  return OrderedTextureBehavior;\n}();\n\nOrderedTextureBehavior.type = 'textureOrdered';\nOrderedTextureBehavior.editorConfig = null;\n/**\r\n * A helper point for math things.\r\n * @hidden\r\n */\n\nvar helperPoint = new Point();\n/**\r\n * A hand picked list of Math functions (and a couple properties) that are\r\n * allowable. They should be used without the preceding \"Math.\"\r\n * @hidden\r\n */\n\nvar MATH_FUNCS = ['E', 'LN2', 'LN10', 'LOG2E', 'LOG10E', 'PI', 'SQRT1_2', 'SQRT2', 'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'atan2', 'cbrt', 'ceil', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'hypot', 'log', 'log1p', 'log10', 'log2', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh'];\n/**\r\n * create an actual regular expression object from the string\r\n * @hidden\r\n */\n\nvar WHITELISTER = new RegExp([// Allow the 4 basic operations, parentheses and all numbers/decimals, as well\n// as 'x', for the variable usage.\n'[01234567890\\\\.\\\\*\\\\-\\\\+\\\\/\\\\(\\\\)x ,]'].concat(MATH_FUNCS).join('|'), 'g');\n/**\r\n * Parses a string into a function for path following.\r\n * This involves whitelisting the string for safety, inserting \"Math.\" to math function\r\n * names, and using `new Function()` to generate a function.\r\n * @hidden\r\n * @param pathString The string to parse.\r\n * @return The path function - takes x, outputs y.\r\n */\n\nfunction parsePath(pathString) {\n  var matches = pathString.match(WHITELISTER);\n\n  for (var i = matches.length - 1; i >= 0; --i) {\n    if (MATH_FUNCS.indexOf(matches[i]) >= 0) {\n      matches[i] = \"Math.\".concat(matches[i]);\n    }\n  }\n\n  pathString = matches.join(''); // eslint-disable-next-line no-new-func\n\n  return new Function('x', \"return \".concat(pathString, \";\"));\n}\n/**\r\n * A particle that follows a path defined by an algebraic expression, e.g. \"sin(x)\" or\r\n * \"5x + 3\".\r\n * To use this class, the behavior config must have a \"path\" string or function.\r\n *\r\n * A string should have \"x\" in it to represent movement (from the\r\n * speed settings of the behavior). It may have numbers, parentheses, the four basic\r\n * operations, and any Math functions or properties (without the preceding \"Math.\").\r\n * The overall movement of the particle and the expression value become x and y positions for\r\n * the particle, respectively. The final position is rotated by the spawn rotation/angle of\r\n * the particle.\r\n *\r\n * A function merely needs to accept the \"x\" argument and output the a corresponding \"y\" value.\r\n *\r\n * Some example paths:\r\n *\r\n * * `\"sin(x/10) * 20\"` A sine wave path.\r\n * * `\"cos(x/100) * 30\"` Particles curve counterclockwise (for medium speed/low lifetime particles)\r\n * * `\"pow(x/10, 2) / 2\"` Particles curve clockwise (remember, +y is down).\r\n * * `(x) => Math.floor(x) * 3` Supplying an existing function should look like this\r\n *\r\n * Example configuration:\r\n * ```javascript\r\n * {\r\n *     \"type\": \"movePath\",\r\n *     \"config\": {\r\n *          \"path\": \"round(sin(x) * 2\",\r\n *          \"speed\": {\r\n *              \"list\": [{value: 10, time: 0}, {value: 100, time: 0.25}, {value: 0, time: 1}],\r\n *          },\r\n *          \"minMult\": 0.8\r\n *     }\r\n *}\r\n */\n\n\nvar PathBehavior = /*#__PURE__*/function () {\n  function PathBehavior(config) {\n    _classCallCheck(this, PathBehavior);\n\n    var _a; // *MUST* happen after other behaviors do initialization so that we can read initial transformations\n\n\n    this.order = BehaviorOrder.Late;\n\n    if (config.path) {\n      if (typeof config.path === 'function') {\n        this.path = config.path;\n      } else {\n        try {\n          this.path = parsePath(config.path);\n        } catch (e) {\n          this.path = null;\n        }\n      }\n    } else {\n      // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n      this.path = function (x) {\n        return x;\n      };\n    }\n\n    this.list = new PropertyList(false);\n    this.list.reset(PropertyNode.createList(config.speed));\n    this.minMult = (_a = config.minMult) !== null && _a !== void 0 ? _a : 1;\n  }\n\n  _createClass(PathBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        /*\r\n         * The initial rotation in degrees of the particle, because the direction of the path\r\n         * is based on that.\r\n         */\n        next.config.initRotation = next.rotation;\n        /* The initial position of the particle, as all path movement is added to that. */\n\n        if (!next.config.initPosition) {\n          next.config.initPosition = new Point(next.x, next.y);\n        } else {\n          next.config.initPosition.copyFrom(next.position);\n        }\n        /* Total single directional movement, due to speed. */\n\n\n        next.config.movement = 0; // also do speed multiplier, since this includes basic speed movement\n\n        var mult = Math.random() * (1 - this.minMult) + this.minMult;\n        next.config.speedMult = mult;\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle, deltaSec) {\n      // increase linear movement based on speed\n      var speed = this.list.interpolate(particle.agePercent) * particle.config.speedMult;\n      particle.config.movement += speed * deltaSec; // set up the helper point for rotation\n\n      helperPoint.x = particle.config.movement;\n      helperPoint.y = this.path(helperPoint.x);\n      rotatePoint(particle.config.initRotation, helperPoint);\n      particle.position.x = particle.config.initPosition.x + helperPoint.x;\n      particle.position.y = particle.config.initPosition.y + helperPoint.y;\n    }\n  }]);\n\n  return PathBehavior;\n}();\n\nPathBehavior.type = 'movePath';\nPathBehavior.editorConfig = null;\n/**\r\n * A Spawn behavior that sends particles out from a single point at the emitter's position.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'spawnPoint',\r\n *     config: {}\r\n * }\r\n * ```\r\n */\n\nvar PointSpawnBehavior = /*#__PURE__*/function () {\n  function PointSpawnBehavior() {\n    _classCallCheck(this, PointSpawnBehavior);\n\n    this.order = BehaviorOrder.Spawn;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  _createClass(PointSpawnBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(_first) {// really just a no-op\n    }\n  }]);\n\n  return PointSpawnBehavior;\n}();\n\nPointSpawnBehavior.type = 'spawnPoint';\nPointSpawnBehavior.editorConfig = null;\n/**\r\n * A Texture behavior that assigns a random texture to each particle from its list.\r\n * String values will be converted to textures with {@link ParticleUtils.GetTextureFromString}.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'textureRandom',\r\n *     config: {\r\n *         textures: [\"myTex1Id\", \"myTex2Id\", \"myTex3Id\", \"myTex4Id\"],\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar RandomTextureBehavior = /*#__PURE__*/function () {\n  function RandomTextureBehavior(config) {\n    _classCallCheck(this, RandomTextureBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.textures = config.textures.map(function (tex) {\n      return typeof tex === 'string' ? GetTextureFromString(tex) : tex;\n    });\n  }\n\n  _createClass(RandomTextureBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        var _index2 = Math.floor(Math.random() * this.textures.length);\n\n        next.texture = this.textures[_index2];\n        next = next.next;\n      }\n    }\n  }]);\n\n  return RandomTextureBehavior;\n}();\n\nRandomTextureBehavior.type = 'textureRandom';\nRandomTextureBehavior.editorConfig = null;\n/**\r\n * A Rotation behavior that handles starting rotation, rotation speed, and rotational acceleration.\r\n *\r\n * Example configuration:\r\n * ```javascript\r\n * {\r\n *     \"type\": \"rotation\",\r\n *     \"config\": {\r\n *          \"minStart\": 0,\r\n *          \"maxStart\": 180,\r\n *          \"minSpeed\": 30,\r\n *          \"maxSpeed\": 45,\r\n *          \"accel\": 20\r\n *     }\r\n *}\r\n * ```\r\n */\n\nvar RotationBehavior = /*#__PURE__*/function () {\n  function RotationBehavior(config) {\n    _classCallCheck(this, RotationBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.minStart = config.minStart * DEG_TO_RADS;\n    this.maxStart = config.maxStart * DEG_TO_RADS;\n    this.minSpeed = config.minSpeed * DEG_TO_RADS;\n    this.maxSpeed = config.maxSpeed * DEG_TO_RADS;\n    this.accel = config.accel * DEG_TO_RADS;\n  }\n\n  _createClass(RotationBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        if (this.minStart === this.maxStart) {\n          next.rotation += this.maxStart;\n        } else {\n          next.rotation += Math.random() * (this.maxStart - this.minStart) + this.minStart;\n        }\n\n        next.config.rotSpeed = Math.random() * (this.maxSpeed - this.minSpeed) + this.minSpeed;\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle, deltaSec) {\n      if (this.accel) {\n        var oldSpeed = particle.config.rotSpeed;\n        particle.config.rotSpeed += this.accel * deltaSec;\n        particle.rotation += (particle.config.rotSpeed + oldSpeed) / 2 * deltaSec;\n      } else {\n        particle.rotation += particle.config.rotSpeed * deltaSec;\n      }\n    }\n  }]);\n\n  return RotationBehavior;\n}();\n\nRotationBehavior.type = 'rotation';\nRotationBehavior.editorConfig = null;\n/**\r\n * A Rotation behavior that handles starting rotation.\r\n *\r\n * Example configuration:\r\n * ```javascript\r\n * {\r\n *     \"type\": \"rotationStatic\",\r\n *     \"config\": {\r\n *          \"min\": 0,\r\n *          \"max\": 180,\r\n *     }\r\n *}\r\n * ```\r\n */\n\nvar StaticRotationBehavior = /*#__PURE__*/function () {\n  function StaticRotationBehavior(config) {\n    _classCallCheck(this, StaticRotationBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.min = config.min * DEG_TO_RADS;\n    this.max = config.max * DEG_TO_RADS;\n  }\n\n  _createClass(StaticRotationBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        if (this.min === this.max) {\n          next.rotation += this.max;\n        } else {\n          next.rotation += Math.random() * (this.max - this.min) + this.min;\n        }\n\n        next = next.next;\n      }\n    }\n  }]);\n\n  return StaticRotationBehavior;\n}();\n\nStaticRotationBehavior.type = 'rotationStatic';\nStaticRotationBehavior.editorConfig = null;\n/**\r\n * A Rotation behavior that blocks all rotation caused by spawn settings,\r\n * by resetting it to the specified rotation (or 0).\r\n *\r\n * Example configuration:\r\n * ```javascript\r\n * {\r\n *     \"type\": \"noRotation\",\r\n *     \"config\": {\r\n *          \"rotation\": 0\r\n *     }\r\n *}\r\n * ```\r\n */\n\nvar NoRotationBehavior = /*#__PURE__*/function () {\n  function NoRotationBehavior(config) {\n    _classCallCheck(this, NoRotationBehavior);\n\n    this.order = BehaviorOrder.Late + 1;\n    this.rotation = (config.rotation || 0) * DEG_TO_RADS;\n  }\n\n  _createClass(NoRotationBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        next.rotation = this.rotation;\n        next = next.next;\n      }\n    }\n  }]);\n\n  return NoRotationBehavior;\n}();\n\nNoRotationBehavior.type = 'noRotation';\nNoRotationBehavior.editorConfig = null;\n/**\r\n * A Scale behavior that applies an interpolated or stepped list of values to the particle's x & y scale.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'scale',\r\n *     config: {\r\n *          scale: {\r\n *              list: [{value: 0, time: 0}, {value: 1, time: 0.25}, {value: 0, time: 1}],\r\n *              isStepped: true\r\n *          },\r\n *          minMult: 0.5\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar ScaleBehavior = /*#__PURE__*/function () {\n  function ScaleBehavior(config) {\n    _classCallCheck(this, ScaleBehavior);\n\n    var _a;\n\n    this.order = BehaviorOrder.Normal;\n    this.list = new PropertyList(false);\n    this.list.reset(PropertyNode.createList(config.scale));\n    this.minMult = (_a = config.minMult) !== null && _a !== void 0 ? _a : 1;\n  }\n\n  _createClass(ScaleBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        var mult = Math.random() * (1 - this.minMult) + this.minMult;\n        next.config.scaleMult = mult;\n        next.scale.x = next.scale.y = this.list.first.value * mult;\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle) {\n      particle.scale.x = particle.scale.y = this.list.interpolate(particle.agePercent) * particle.config.scaleMult;\n    }\n  }]);\n\n  return ScaleBehavior;\n}();\n\nScaleBehavior.type = 'scale';\nScaleBehavior.editorConfig = null;\n/**\r\n * A Scale behavior that applies a randomly picked value to the particle's x & y scale at initialization.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'scaleStatic',\r\n *     config: {\r\n *         min: 0.25,\r\n *         max: 0.75,\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar StaticScaleBehavior = /*#__PURE__*/function () {\n  function StaticScaleBehavior(config) {\n    _classCallCheck(this, StaticScaleBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.min = config.min;\n    this.max = config.max;\n  }\n\n  _createClass(StaticScaleBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        var scale = Math.random() * (this.max - this.min) + this.min;\n        next.scale.x = next.scale.y = scale;\n        next = next.next;\n      }\n    }\n  }]);\n\n  return StaticScaleBehavior;\n}();\n\nStaticScaleBehavior.type = 'scaleStatic';\nStaticScaleBehavior.editorConfig = null;\n/**\r\n * A Spawn behavior that places (and optionally rotates) particles according to a\r\n * specified shape. Additional shapes can be registered with {@link registerShape | SpawnShape.registerShape()}.\r\n * Additional shapes must implement the {@link SpawnShape} interface, and their class must match the\r\n * {@link SpawnShapeClass} interface.\r\n * Shapes included by default are:\r\n * * {@link Rectangle}\r\n * * {@link Torus}\r\n * * {@link PolygonalChain}\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'spawnShape',\r\n *     config: {\r\n *          type: 'rect',\r\n *          data: {\r\n *              x: 0,\r\n *              y: 0,\r\n *              width: 20,\r\n *              height: 300,\r\n *          }\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar ShapeSpawnBehavior = /*#__PURE__*/function () {\n  function ShapeSpawnBehavior(config) {\n    _classCallCheck(this, ShapeSpawnBehavior);\n\n    this.order = BehaviorOrder.Spawn;\n    var ShapeClass = ShapeSpawnBehavior.shapes[config.type];\n\n    if (!ShapeClass) {\n      throw new Error(\"No shape found with type '\".concat(config.type, \"'\"));\n    }\n\n    this.shape = new ShapeClass(config.data);\n  }\n  /**\r\n   * Registers a shape to be used by the ShapeSpawn behavior.\r\n   * @param constructor The shape class constructor to use, with a static `type` property to reference it by.\r\n   * @param typeOverride An optional type override, primarily for registering a shape under multiple names.\r\n   */\n\n\n  _createClass(ShapeSpawnBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        this.shape.getRandPos(next);\n        next = next.next;\n      }\n    }\n  }], [{\n    key: \"registerShape\",\n    value: function registerShape(constructor, typeOverride) {\n      ShapeSpawnBehavior.shapes[typeOverride || constructor.type] = constructor;\n    }\n  }]);\n\n  return ShapeSpawnBehavior;\n}();\n\nShapeSpawnBehavior.type = 'spawnShape';\nShapeSpawnBehavior.editorConfig = null;\n/**\r\n * Dictionary of all registered shape classes.\r\n */\n\nShapeSpawnBehavior.shapes = {};\nShapeSpawnBehavior.registerShape(PolygonalChain);\nShapeSpawnBehavior.registerShape(Rectangle);\nShapeSpawnBehavior.registerShape(Torus);\nShapeSpawnBehavior.registerShape(Torus, 'circle');\n/**\r\n * A Textuure behavior that assigns a single texture to each particle.\r\n * String values will be converted to textures with {@link ParticleUtils.GetTextureFromString}.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'textureSingle',\r\n *     config: {\r\n *         texture: Texture.from('myTexId'),\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar SingleTextureBehavior = /*#__PURE__*/function () {\n  function SingleTextureBehavior(config) {\n    _classCallCheck(this, SingleTextureBehavior);\n\n    this.order = BehaviorOrder.Normal;\n    this.texture = typeof config.texture === 'string' ? GetTextureFromString(config.texture) : config.texture;\n  }\n\n  _createClass(SingleTextureBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        next.texture = this.texture;\n        next = next.next;\n      }\n    }\n  }]);\n\n  return SingleTextureBehavior;\n}();\n\nSingleTextureBehavior.type = 'textureSingle';\nSingleTextureBehavior.editorConfig = null;\n/**\r\n * A Movement behavior that uses an interpolated or stepped list of values for a particles speed at any given moment.\r\n * Movement direction is controlled by the particle's starting rotation.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'moveSpeed',\r\n *     config: {\r\n *          speed: {\r\n *              list: [{value: 10, time: 0}, {value: 100, time: 0.25}, {value: 0, time: 1}],\r\n *          },\r\n *          minMult: 0.8\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar SpeedBehavior = /*#__PURE__*/function () {\n  function SpeedBehavior(config) {\n    _classCallCheck(this, SpeedBehavior);\n\n    var _a;\n\n    this.order = BehaviorOrder.Late;\n    this.list = new PropertyList(false);\n    this.list.reset(PropertyNode.createList(config.speed));\n    this.minMult = (_a = config.minMult) !== null && _a !== void 0 ? _a : 1;\n  }\n\n  _createClass(SpeedBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        var mult = Math.random() * (1 - this.minMult) + this.minMult;\n        next.config.speedMult = mult;\n\n        if (!next.config.velocity) {\n          next.config.velocity = new Point(this.list.first.value * mult, 0);\n        } else {\n          next.config.velocity.set(this.list.first.value * mult, 0);\n        }\n\n        rotatePoint(next.rotation, next.config.velocity);\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle, deltaSec) {\n      var speed = this.list.interpolate(particle.agePercent) * particle.config.speedMult;\n      var vel = particle.config.velocity;\n      normalize(vel);\n      scaleBy(vel, speed);\n      particle.x += vel.x * deltaSec;\n      particle.y += vel.y * deltaSec;\n    }\n  }]);\n\n  return SpeedBehavior;\n}();\n\nSpeedBehavior.type = 'moveSpeed';\nSpeedBehavior.editorConfig = null;\n/**\r\n * A Movement behavior that uses a randomly picked constant speed throughout a particle's lifetime.\r\n * Movement direction is controlled by the particle's starting rotation.\r\n *\r\n * Example config:\r\n * ```javascript\r\n * {\r\n *     type: 'moveSpeedStatic',\r\n *     config: {\r\n *          min: 100,\r\n *          max: 150\r\n *     }\r\n * }\r\n * ```\r\n */\n\nvar StaticSpeedBehavior = /*#__PURE__*/function () {\n  function StaticSpeedBehavior(config) {\n    _classCallCheck(this, StaticSpeedBehavior);\n\n    this.order = BehaviorOrder.Late;\n    this.min = config.min;\n    this.max = config.max;\n  }\n\n  _createClass(StaticSpeedBehavior, [{\n    key: \"initParticles\",\n    value: function initParticles(first) {\n      var next = first;\n\n      while (next) {\n        var speed = Math.random() * (this.max - this.min) + this.min;\n\n        if (!next.config.velocity) {\n          next.config.velocity = new Point(speed, 0);\n        } else {\n          next.config.velocity.set(speed, 0);\n        }\n\n        rotatePoint(next.rotation, next.config.velocity);\n        next = next.next;\n      }\n    }\n  }, {\n    key: \"updateParticle\",\n    value: function updateParticle(particle, deltaSec) {\n      var velocity = particle.config.velocity;\n      particle.x += velocity.x * deltaSec;\n      particle.y += velocity.y * deltaSec;\n    }\n  }]);\n\n  return StaticSpeedBehavior;\n}();\n\nStaticSpeedBehavior.type = 'moveSpeedStatic';\nStaticSpeedBehavior.editorConfig = null; // export support types for external use\n\nvar index$1 = {\n  __proto__: null,\n  spawnShapes: index,\n  editor: Types,\n\n  get BehaviorOrder() {\n    return BehaviorOrder;\n  },\n\n  AccelerationBehavior: AccelerationBehavior,\n  AlphaBehavior: AlphaBehavior,\n  StaticAlphaBehavior: StaticAlphaBehavior,\n  RandomAnimatedTextureBehavior: RandomAnimatedTextureBehavior,\n  SingleAnimatedTextureBehavior: SingleAnimatedTextureBehavior,\n  BlendModeBehavior: BlendModeBehavior,\n  BurstSpawnBehavior: BurstSpawnBehavior,\n  ColorBehavior: ColorBehavior,\n  StaticColorBehavior: StaticColorBehavior,\n  OrderedTextureBehavior: OrderedTextureBehavior,\n  PathBehavior: PathBehavior,\n  PointSpawnBehavior: PointSpawnBehavior,\n  RandomTextureBehavior: RandomTextureBehavior,\n  RotationBehavior: RotationBehavior,\n  StaticRotationBehavior: StaticRotationBehavior,\n  NoRotationBehavior: NoRotationBehavior,\n  ScaleBehavior: ScaleBehavior,\n  StaticScaleBehavior: StaticScaleBehavior,\n  ShapeSpawnBehavior: ShapeSpawnBehavior,\n  SingleTextureBehavior: SingleTextureBehavior,\n  SpeedBehavior: SpeedBehavior,\n  StaticSpeedBehavior: StaticSpeedBehavior\n};\n/**\r\n * Converts emitter configuration from pre-5.0.0 library values into the current version.\r\n *\r\n * Example usage:\r\n * ```javascript\r\n * const emitter = new Emitter(myContainer, upgradeConfig(myOldConfig, [myTexture, myOtherTexture]));\r\n * ```\r\n * @param config The old emitter config to upgrade.\r\n * @param art The old art values as would have been passed into the Emitter constructor or `Emitter.init()`\r\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nfunction upgradeConfig(config, art) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w; // just ensure we aren't given any V3 config data\n\n\n  if ('behaviors' in config) {\n    return config;\n  }\n\n  var out = {\n    lifetime: config.lifetime,\n    ease: config.ease,\n    particlesPerWave: config.particlesPerWave,\n    frequency: config.frequency,\n    spawnChance: config.spawnChance,\n    emitterLifetime: config.emitterLifetime,\n    maxParticles: config.maxParticles,\n    addAtBack: config.addAtBack,\n    pos: config.pos,\n    emit: config.emit,\n    autoUpdate: config.autoUpdate,\n    behaviors: []\n  }; // set up the alpha\n\n  if (config.alpha) {\n    if ('start' in config.alpha) {\n      if (config.alpha.start === config.alpha.end) {\n        if (config.alpha.start !== 1) {\n          out.behaviors.push({\n            type: 'alphaStatic',\n            config: {\n              alpha: config.alpha.start\n            }\n          });\n        }\n      } else {\n        var list = {\n          list: [{\n            time: 0,\n            value: config.alpha.start\n          }, {\n            time: 1,\n            value: config.alpha.end\n          }]\n        };\n        out.behaviors.push({\n          type: 'alpha',\n          config: {\n            alpha: list\n          }\n        });\n      }\n    } else if (config.alpha.list.length === 1) {\n      if (config.alpha.list[0].value !== 1) {\n        out.behaviors.push({\n          type: 'alphaStatic',\n          config: {\n            alpha: config.alpha.list[0].value\n          }\n        });\n      }\n    } else {\n      out.behaviors.push({\n        type: 'alpha',\n        config: {\n          alpha: config.alpha\n        }\n      });\n    }\n  } // acceleration movement\n\n\n  if (config.acceleration && (config.acceleration.x || config.acceleration.y)) {\n    var minStart;\n    var maxStart;\n\n    if ('start' in config.speed) {\n      minStart = config.speed.start * ((_a = config.speed.minimumSpeedMultiplier) !== null && _a !== void 0 ? _a : 1);\n      maxStart = config.speed.start;\n    } else {\n      minStart = config.speed.list[0].value * ((_b = config.minimumSpeedMultiplier) !== null && _b !== void 0 ? _b : 1);\n      maxStart = config.speed.list[0].value;\n    }\n\n    out.behaviors.push({\n      type: 'moveAcceleration',\n      config: {\n        accel: config.acceleration,\n        minStart: minStart,\n        maxStart: maxStart,\n        rotate: !config.noRotation,\n        maxSpeed: config.maxSpeed\n      }\n    });\n  } // path movement\n  else if ((_c = config.extraData) === null || _c === void 0 ? void 0 : _c.path) {\n    var _list;\n\n    var mult;\n\n    if ('start' in config.speed) {\n      mult = (_d = config.speed.minimumSpeedMultiplier) !== null && _d !== void 0 ? _d : 1;\n\n      if (config.speed.start === config.speed.end) {\n        _list = {\n          list: [{\n            time: 0,\n            value: config.speed.start\n          }]\n        };\n      } else {\n        _list = {\n          list: [{\n            time: 0,\n            value: config.speed.start\n          }, {\n            time: 1,\n            value: config.speed.end\n          }]\n        };\n      }\n    } else {\n      _list = config.speed;\n      mult = (_e = config.minimumSpeedMultiplier) !== null && _e !== void 0 ? _e : 1;\n    }\n\n    out.behaviors.push({\n      type: 'movePath',\n      config: {\n        path: config.extraData.path,\n        speed: _list,\n        minMult: mult\n      }\n    });\n  } // normal speed movement\n  else {\n    if (config.speed) {\n      if ('start' in config.speed) {\n        if (config.speed.start === config.speed.end) {\n          out.behaviors.push({\n            type: 'moveSpeedStatic',\n            config: {\n              min: config.speed.start * ((_f = config.speed.minimumSpeedMultiplier) !== null && _f !== void 0 ? _f : 1),\n              max: config.speed.start\n            }\n          });\n        } else {\n          var _list2 = {\n            list: [{\n              time: 0,\n              value: config.speed.start\n            }, {\n              time: 1,\n              value: config.speed.end\n            }]\n          };\n          out.behaviors.push({\n            type: 'moveSpeed',\n            config: {\n              speed: _list2,\n              minMult: config.speed.minimumSpeedMultiplier\n            }\n          });\n        }\n      } else if (config.speed.list.length === 1) {\n        out.behaviors.push({\n          type: 'moveSpeedStatic',\n          config: {\n            min: config.speed.list[0].value * ((_g = config.minimumSpeedMultiplier) !== null && _g !== void 0 ? _g : 1),\n            max: config.speed.list[0].value\n          }\n        });\n      } else {\n        out.behaviors.push({\n          type: 'moveSpeed',\n          config: {\n            speed: config.speed,\n            minMult: (_h = config.minimumSpeedMultiplier) !== null && _h !== void 0 ? _h : 1\n          }\n        });\n      }\n    }\n  } // scale\n\n\n  if (config.scale) {\n    if ('start' in config.scale) {\n      var _mult = (_j = config.scale.minimumScaleMultiplier) !== null && _j !== void 0 ? _j : 1;\n\n      if (config.scale.start === config.scale.end) {\n        out.behaviors.push({\n          type: 'scaleStatic',\n          config: {\n            min: config.scale.start * _mult,\n            max: config.scale.start\n          }\n        });\n      } else {\n        var _list3 = {\n          list: [{\n            time: 0,\n            value: config.scale.start\n          }, {\n            time: 1,\n            value: config.scale.end\n          }]\n        };\n        out.behaviors.push({\n          type: 'scale',\n          config: {\n            scale: _list3,\n            minMult: _mult\n          }\n        });\n      }\n    } else if (config.scale.list.length === 1) {\n      var _mult2 = (_k = config.minimumScaleMultiplier) !== null && _k !== void 0 ? _k : 1;\n\n      var scale = config.scale.list[0].value;\n      out.behaviors.push({\n        type: 'scaleStatic',\n        config: {\n          min: scale * _mult2,\n          max: scale\n        }\n      });\n    } else {\n      out.behaviors.push({\n        type: 'scale',\n        config: {\n          scale: config.scale,\n          minMult: (_l = config.minimumScaleMultiplier) !== null && _l !== void 0 ? _l : 1\n        }\n      });\n    }\n  } // color\n\n\n  if (config.color) {\n    if ('start' in config.color) {\n      if (config.color.start === config.color.end) {\n        if (config.color.start !== 'ffffff') {\n          out.behaviors.push({\n            type: 'colorStatic',\n            config: {\n              color: config.color.start\n            }\n          });\n        }\n      } else {\n        var _list4 = {\n          list: [{\n            time: 0,\n            value: config.color.start\n          }, {\n            time: 1,\n            value: config.color.end\n          }]\n        };\n        out.behaviors.push({\n          type: 'color',\n          config: {\n            color: _list4\n          }\n        });\n      }\n    } else if (config.color.list.length === 1) {\n      if (config.color.list[0].value !== 'ffffff') {\n        out.behaviors.push({\n          type: 'colorStatic',\n          config: {\n            color: config.color.list[0].value\n          }\n        });\n      }\n    } else {\n      out.behaviors.push({\n        type: 'color',\n        config: {\n          color: config.color\n        }\n      });\n    }\n  } // rotation\n\n\n  if (config.rotationAcceleration || ((_m = config.rotationSpeed) === null || _m === void 0 ? void 0 : _m.min) || ((_o = config.rotationSpeed) === null || _o === void 0 ? void 0 : _o.max)) {\n    out.behaviors.push({\n      type: 'rotation',\n      config: {\n        accel: config.rotationAcceleration || 0,\n        minSpeed: ((_p = config.rotationSpeed) === null || _p === void 0 ? void 0 : _p.min) || 0,\n        maxSpeed: ((_q = config.rotationSpeed) === null || _q === void 0 ? void 0 : _q.max) || 0,\n        minStart: ((_r = config.startRotation) === null || _r === void 0 ? void 0 : _r.min) || 0,\n        maxStart: ((_s = config.startRotation) === null || _s === void 0 ? void 0 : _s.max) || 0\n      }\n    });\n  } else if (((_t = config.startRotation) === null || _t === void 0 ? void 0 : _t.min) || ((_u = config.startRotation) === null || _u === void 0 ? void 0 : _u.max)) {\n    out.behaviors.push({\n      type: 'rotationStatic',\n      config: {\n        min: ((_v = config.startRotation) === null || _v === void 0 ? void 0 : _v.min) || 0,\n        max: ((_w = config.startRotation) === null || _w === void 0 ? void 0 : _w.max) || 0\n      }\n    });\n  }\n\n  if (config.noRotation) {\n    out.behaviors.push({\n      type: 'noRotation',\n      config: {}\n    });\n  } // blend mode\n\n\n  if (config.blendMode && config.blendMode !== 'normal') {\n    out.behaviors.push({\n      type: 'blendMode',\n      config: {\n        blendMode: config.blendMode\n      }\n    });\n  } // animated\n\n\n  if (Array.isArray(art) && typeof art[0] !== 'string' && 'framerate' in art[0]) {\n    for (var i = 0; i < art.length; ++i) {\n      if (art[i].framerate === 'matchLife') {\n        art[i].framerate = -1;\n      }\n    }\n\n    out.behaviors.push({\n      type: 'animatedRandom',\n      config: {\n        anims: art\n      }\n    });\n  } else if (typeof art !== 'string' && 'framerate' in art) {\n    if (art.framerate === 'matchLife') {\n      art.framerate = -1;\n    }\n\n    out.behaviors.push({\n      type: 'animatedSingle',\n      config: {\n        anim: art\n      }\n    });\n  } // ordered art\n  else if (config.orderedArt && Array.isArray(art)) {\n    out.behaviors.push({\n      type: 'textureOrdered',\n      config: {\n        textures: art\n      }\n    });\n  } // random texture\n  else if (Array.isArray(art)) {\n    out.behaviors.push({\n      type: 'textureRandom',\n      config: {\n        textures: art\n      }\n    });\n  } // single texture\n  else {\n    out.behaviors.push({\n      type: 'textureSingle',\n      config: {\n        texture: art\n      }\n    });\n  } // spawn burst\n\n\n  if (config.spawnType === 'burst') {\n    out.behaviors.push({\n      type: 'spawnBurst',\n      config: {\n        start: config.angleStart || 0,\n        spacing: config.particleSpacing,\n        // older formats bursted from a single point\n        distance: 0\n      }\n    });\n  } // spawn point\n  else if (config.spawnType === 'point') {\n    out.behaviors.push({\n      type: 'spawnPoint',\n      config: {}\n    });\n  } // spawn shape\n  else {\n    var shape;\n\n    if (config.spawnType === 'ring') {\n      shape = {\n        type: 'torus',\n        data: {\n          x: config.spawnCircle.x,\n          y: config.spawnCircle.y,\n          radius: config.spawnCircle.r,\n          innerRadius: config.spawnCircle.minR,\n          affectRotation: true\n        }\n      };\n    } else if (config.spawnType === 'circle') {\n      shape = {\n        type: 'torus',\n        data: {\n          x: config.spawnCircle.x,\n          y: config.spawnCircle.y,\n          radius: config.spawnCircle.r,\n          innerRadius: 0,\n          affectRotation: false\n        }\n      };\n    } else if (config.spawnType === 'rect') {\n      shape = {\n        type: 'rect',\n        data: config.spawnRect\n      };\n    } else if (config.spawnType === 'polygonalChain') {\n      shape = {\n        type: 'polygonalChain',\n        data: config.spawnPolygon\n      };\n    }\n\n    if (shape) {\n      out.behaviors.push({\n        type: 'spawnShape',\n        config: shape\n      });\n    }\n  }\n\n  return out;\n}\n/**\r\n * A semi-experimental Container that uses a doubly linked list to manage children instead of an\r\n * array. This means that adding/removing children often is not the same performance hit that\r\n * it would to be continually pushing/splicing.\r\n * However, this is primarily intended to be used for heavy particle usage, and may not handle\r\n * edge cases well if used as a complete Container replacement.\r\n */\n\n\nvar LinkedListContainer = /*#__PURE__*/function (_Container) {\n  _inherits(LinkedListContainer, _Container);\n\n  var _super2 = _createSuper(LinkedListContainer);\n\n  function LinkedListContainer() {\n    var _this2;\n\n    _classCallCheck(this, LinkedListContainer);\n\n    _this2 = _super2.apply(this, arguments);\n    _this2._firstChild = null;\n    _this2._lastChild = null;\n    _this2._childCount = 0;\n    return _this2;\n  }\n\n  _createClass(LinkedListContainer, [{\n    key: \"firstChild\",\n    get: function get() {\n      return this._firstChild;\n    }\n  }, {\n    key: \"lastChild\",\n    get: function get() {\n      return this._lastChild;\n    }\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._childCount;\n    }\n  }, {\n    key: \"addChild\",\n    value: function addChild() {\n      // if there is only one argument we can bypass looping through the them\n      if (arguments.length > 1) {\n        // loop through the array and add all children\n        for (var i = 0; i < arguments.length; i++) {\n          // eslint-disable-next-line prefer-rest-params\n          this.addChild(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n        }\n      } else {\n        var child = arguments.length <= 0 ? undefined : arguments[0]; // if the child has a parent then lets remove it as PixiJS objects can only exist in one place\n\n        if (child.parent) {\n          child.parent.removeChild(child);\n        }\n\n        child.parent = this;\n        this.sortDirty = true; // ensure child transform will be recalculated\n\n        child.transform._parentID = -1; // add to list if we have a list\n\n        if (this._lastChild) {\n          this._lastChild.nextChild = child;\n          child.prevChild = this._lastChild;\n          this._lastChild = child;\n        } // otherwise initialize the list\n        else {\n          this._firstChild = this._lastChild = child;\n        } // update child count\n\n\n        ++this._childCount; // ensure bounds will be recalculated\n\n        this._boundsID++; // TODO - lets either do all callbacks or all events.. not both!\n\n        this.onChildrenChange();\n        this.emit('childAdded', child, this, this._childCount);\n        child.emit('added', this);\n      }\n\n      return arguments.length <= 0 ? undefined : arguments[0];\n    }\n  }, {\n    key: \"addChildAt\",\n    value: function addChildAt(child, index) {\n      if (index < 0 || index > this._childCount) {\n        throw new Error(\"addChildAt: The index \".concat(index, \" supplied is out of bounds \").concat(this._childCount));\n      }\n\n      if (child.parent) {\n        child.parent.removeChild(child);\n      }\n\n      child.parent = this;\n      this.sortDirty = true; // ensure child transform will be recalculated\n\n      child.transform._parentID = -1;\n      var c = child; // if no children, do basic initialization\n\n      if (!this._firstChild) {\n        this._firstChild = this._lastChild = c;\n      } // add at beginning (back)\n      else if (index === 0) {\n        this._firstChild.prevChild = c;\n        c.nextChild = this._firstChild;\n        this._firstChild = c;\n      } // add at end (front)\n      else if (index === this._childCount) {\n        this._lastChild.nextChild = c;\n        c.prevChild = this._lastChild;\n        this._lastChild = c;\n      } // otherwise we have to start counting through the children to find the right one\n      // - SLOW, only provided to fully support the possibility of use\n      else {\n        var i = 0;\n        var target = this._firstChild;\n\n        while (i < index) {\n          target = target.nextChild;\n          ++i;\n        } // insert before the target that we found at the specified index\n\n\n        target.prevChild.nextChild = c;\n        c.prevChild = target.prevChild;\n        c.nextChild = target;\n        target.prevChild = c;\n      } // update child count\n\n\n      ++this._childCount; // ensure bounds will be recalculated\n\n      this._boundsID++; // TODO - lets either do all callbacks or all events.. not both!\n\n      this.onChildrenChange(index);\n      child.emit('added', this);\n      this.emit('childAdded', child, this, index);\n      return child;\n    }\n    /**\r\n     * Adds a child to the container to be rendered below another child.\r\n     *\r\n     * @param child The child to add\r\n     * @param relative - The current child to add the new child relative to.\r\n     * @return The child that was added.\r\n     */\n\n  }, {\n    key: \"addChildBelow\",\n    value: function addChildBelow(child, relative) {\n      if (relative.parent !== this) {\n        throw new Error(\"addChildBelow: The relative target must be a child of this parent\");\n      }\n\n      if (child.parent) {\n        child.parent.removeChild(child);\n      }\n\n      child.parent = this;\n      this.sortDirty = true; // ensure child transform will be recalculated\n\n      child.transform._parentID = -1; // insert before the target that we were given\n\n      relative.prevChild.nextChild = child;\n      child.prevChild = relative.prevChild;\n      child.nextChild = relative;\n      relative.prevChild = child;\n\n      if (this._firstChild === relative) {\n        this._firstChild = child;\n      } // update child count\n\n\n      ++this._childCount; // ensure bounds will be recalculated\n\n      this._boundsID++; // TODO - lets either do all callbacks or all events.. not both!\n\n      this.onChildrenChange();\n      this.emit('childAdded', child, this, this._childCount);\n      child.emit('added', this);\n      return child;\n    }\n    /**\r\n     * Adds a child to the container to be rendered above another child.\r\n     *\r\n     * @param child The child to add\r\n     * @param relative - The current child to add the new child relative to.\r\n     * @return The child that was added.\r\n     */\n\n  }, {\n    key: \"addChildAbove\",\n    value: function addChildAbove(child, relative) {\n      if (relative.parent !== this) {\n        throw new Error(\"addChildBelow: The relative target must be a child of this parent\");\n      }\n\n      if (child.parent) {\n        child.parent.removeChild(child);\n      }\n\n      child.parent = this;\n      this.sortDirty = true; // ensure child transform will be recalculated\n\n      child.transform._parentID = -1; // insert after the target that we were given\n\n      relative.nextChild.prevChild = child;\n      child.nextChild = relative.nextChild;\n      child.prevChild = relative;\n      relative.nextChild = child;\n\n      if (this._lastChild === relative) {\n        this._lastChild = child;\n      } // update child count\n\n\n      ++this._childCount; // ensure bounds will be recalculated\n\n      this._boundsID++; // TODO - lets either do all callbacks or all events.. not both!\n\n      this.onChildrenChange();\n      this.emit('childAdded', child, this, this._childCount);\n      child.emit('added', this);\n      return child;\n    }\n  }, {\n    key: \"swapChildren\",\n    value: function swapChildren(child, child2) {\n      if (child === child2 || child.parent !== this || child2.parent !== this) {\n        return;\n      }\n\n      var prevChild = child.prevChild,\n          nextChild = child.nextChild;\n      child.prevChild = child2.prevChild;\n      child.nextChild = child2.nextChild;\n      child2.prevChild = prevChild;\n      child2.nextChild = nextChild;\n\n      if (this._firstChild === child) {\n        this._firstChild = child2;\n      } else if (this._firstChild === child2) {\n        this._firstChild = child;\n      }\n\n      if (this._lastChild === child) {\n        this._lastChild = child2;\n      } else if (this._lastChild === child2) {\n        this._lastChild = child;\n      }\n\n      this.onChildrenChange();\n    }\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(child) {\n      var index = 0;\n      var test = this._firstChild;\n\n      while (test) {\n        if (test === child) {\n          break;\n        }\n\n        test = test.nextChild;\n        ++index;\n      }\n\n      if (!test) {\n        throw new Error('The supplied DisplayObject must be a child of the caller');\n      }\n\n      return index;\n    }\n  }, {\n    key: \"setChildIndex\",\n    value: function setChildIndex(child, index) {\n      if (index < 0 || index >= this._childCount) {\n        throw new Error(\"The index \".concat(index, \" supplied is out of bounds \").concat(this._childCount));\n      }\n\n      if (child.parent !== this) {\n        throw new Error('The supplied DisplayObject must be a child of the caller');\n      } // remove child\n\n\n      if (child.nextChild) {\n        child.nextChild.prevChild = child.prevChild;\n      }\n\n      if (child.prevChild) {\n        child.prevChild.nextChild = child.nextChild;\n      }\n\n      if (this._firstChild === child) {\n        this._firstChild = child.nextChild;\n      }\n\n      if (this._lastChild === child) {\n        this._lastChild = child.prevChild;\n      }\n\n      child.nextChild = null;\n      child.prevChild = null; // do addChildAt\n\n      if (!this._firstChild) {\n        this._firstChild = this._lastChild = child;\n      } else if (index === 0) {\n        this._firstChild.prevChild = child;\n        child.nextChild = this._firstChild;\n        this._firstChild = child;\n      } else if (index === this._childCount) {\n        this._lastChild.nextChild = child;\n        child.prevChild = this._lastChild;\n        this._lastChild = child;\n      } else {\n        var i = 0;\n        var target = this._firstChild;\n\n        while (i < index) {\n          target = target.nextChild;\n          ++i;\n        }\n\n        target.prevChild.nextChild = child;\n        child.prevChild = target.prevChild;\n        child.nextChild = target;\n        target.prevChild = child;\n      }\n\n      this.onChildrenChange(index);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild() {\n      // if there is only one argument we can bypass looping through the them\n      if (arguments.length > 1) {\n        // loop through the arguments property and remove all children\n        for (var i = 0; i < arguments.length; i++) {\n          this.removeChild(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n        }\n      } else {\n        var child = arguments.length <= 0 ? undefined : arguments[0]; // bail if not actually our child\n\n        if (child.parent !== this) return null;\n        child.parent = null; // ensure child transform will be recalculated\n\n        child.transform._parentID = -1; // swap out child references\n\n        if (child.nextChild) {\n          child.nextChild.prevChild = child.prevChild;\n        }\n\n        if (child.prevChild) {\n          child.prevChild.nextChild = child.nextChild;\n        }\n\n        if (this._firstChild === child) {\n          this._firstChild = child.nextChild;\n        }\n\n        if (this._lastChild === child) {\n          this._lastChild = child.prevChild;\n        } // clear sibling references\n\n\n        child.nextChild = null;\n        child.prevChild = null; // update child count\n\n        --this._childCount; // ensure bounds will be recalculated\n\n        this._boundsID++; // TODO - lets either do all callbacks or all events.. not both!\n\n        this.onChildrenChange();\n        child.emit('removed', this);\n        this.emit('childRemoved', child, this);\n      }\n\n      return arguments.length <= 0 ? undefined : arguments[0];\n    }\n  }, {\n    key: \"getChildAt\",\n    value: function getChildAt(index) {\n      if (index < 0 || index >= this._childCount) {\n        throw new Error(\"getChildAt: Index (\".concat(index, \") does not exist.\"));\n      }\n\n      if (index === 0) {\n        return this._firstChild;\n      } // add at end (front)\n      else if (index === this._childCount) {\n        return this._lastChild;\n      } // otherwise we have to start counting through the children to find the right one\n      // - SLOW, only provided to fully support the possibility of use\n\n\n      var i = 0;\n      var target = this._firstChild;\n\n      while (i < index) {\n        target = target.nextChild;\n        ++i;\n      }\n\n      return target;\n    }\n  }, {\n    key: \"removeChildAt\",\n    value: function removeChildAt(index) {\n      var child = this.getChildAt(index); // ensure child transform will be recalculated..\n\n      child.parent = null;\n      child.transform._parentID = -1; // swap out child references\n\n      if (child.nextChild) {\n        child.nextChild.prevChild = child.prevChild;\n      }\n\n      if (child.prevChild) {\n        child.prevChild.nextChild = child.nextChild;\n      }\n\n      if (this._firstChild === child) {\n        this._firstChild = child.nextChild;\n      }\n\n      if (this._lastChild === child) {\n        this._lastChild = child.prevChild;\n      } // clear sibling references\n\n\n      child.nextChild = null;\n      child.prevChild = null; // update child count\n\n      --this._childCount; // ensure bounds will be recalculated\n\n      this._boundsID++; // TODO - lets either do all callbacks or all events.. not both!\n\n      this.onChildrenChange(index);\n      child.emit('removed', this);\n      this.emit('childRemoved', child, this, index);\n      return child;\n    }\n  }, {\n    key: \"removeChildren\",\n    value: function removeChildren() {\n      var beginIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var endIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._childCount;\n      var begin = beginIndex;\n      var end = endIndex;\n      var range = end - begin;\n\n      if (range > 0 && range <= end) {\n        var removed = [];\n        var child = this._firstChild;\n\n        for (var i = 0; i <= end && child; ++i, child = child.nextChild) {\n          if (i >= begin) {\n            removed.push(child);\n          }\n        } // child before removed section\n\n\n        var prevChild = removed[0].prevChild; // child after removed section\n\n        var nextChild = removed[removed.length - 1].nextChild;\n\n        if (!nextChild) {\n          // if we removed the last child, then the new last child is the one before\n          // the removed section\n          this._lastChild = prevChild;\n        } else {\n          // otherwise, stitch the child before the section to the child after\n          nextChild.prevChild = prevChild;\n        }\n\n        if (!prevChild) {\n          // if we removed the first child, then the new first child is the one after\n          // the removed section\n          this._firstChild = nextChild;\n        } else {\n          // otherwise stich the child after the section to the one before\n          prevChild.nextChild = nextChild;\n        }\n\n        for (var _i7 = 0; _i7 < removed.length; ++_i7) {\n          // clear parenting and sibling references for all removed children\n          removed[_i7].parent = null;\n\n          if (removed[_i7].transform) {\n            removed[_i7].transform._parentID = -1;\n          }\n\n          removed[_i7].nextChild = null;\n          removed[_i7].prevChild = null;\n        }\n\n        this._boundsID++;\n        this.onChildrenChange(beginIndex);\n\n        for (var _i8 = 0; _i8 < removed.length; ++_i8) {\n          removed[_i8].emit('removed', this);\n\n          this.emit('childRemoved', removed[_i8], this, _i8);\n        }\n\n        return removed;\n      } else if (range === 0 && this._childCount === 0) {\n        return [];\n      }\n\n      throw new RangeError('removeChildren: numeric values are outside the acceptable range.');\n    }\n    /**\r\n     * Updates the transform on all children of this container for rendering.\r\n     * Copied from and overrides PixiJS v5 method (v4 method is identical)\r\n     */\n\n  }, {\n    key: \"updateTransform\",\n    value: function updateTransform() {\n      this._boundsID++;\n      this.transform.updateTransform(this.parent.transform); // TODO: check render flags, how to process stuff here\n\n      this.worldAlpha = this.alpha * this.parent.worldAlpha;\n      var child;\n      var next;\n\n      for (child = this._firstChild; child; child = next) {\n        next = child.nextChild;\n\n        if (child.visible) {\n          child.updateTransform();\n        }\n      }\n    }\n    /**\r\n     * Recalculates the bounds of the container.\r\n     * Copied from and overrides PixiJS v5 method (v4 method is identical)\r\n     */\n\n  }, {\n    key: \"calculateBounds\",\n    value: function calculateBounds() {\n      this._bounds.clear();\n\n      this._calculateBounds();\n\n      var child;\n      var next;\n\n      for (child = this._firstChild; child; child = next) {\n        next = child.nextChild;\n\n        if (!child.visible || !child.renderable) {\n          continue;\n        }\n\n        child.calculateBounds(); // TODO: filter+mask, need to mask both somehow\n\n        if (child._mask) {\n          var maskObject = child._mask.maskObject || child._mask;\n          maskObject.calculateBounds();\n\n          this._bounds.addBoundsMask(child._bounds, maskObject._bounds);\n        } else if (child.filterArea) {\n          this._bounds.addBoundsArea(child._bounds, child.filterArea);\n        } else {\n          this._bounds.addBounds(child._bounds);\n        }\n      }\n\n      this._bounds.updateID = this._boundsID;\n    }\n    /**\r\n     * Retrieves the local bounds of the displayObject as a rectangle object. Copied from and overrides PixiJS v5 method\r\n     */\n\n  }, {\n    key: \"getLocalBounds\",\n    value: function getLocalBounds(rect) {\n      var skipChildrenUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      // skip Container's getLocalBounds, go directly to DisplayObject\n      var result = DisplayObject.prototype.getLocalBounds.call(this, rect);\n\n      if (!skipChildrenUpdate) {\n        var child;\n        var next;\n\n        for (child = this._firstChild; child; child = next) {\n          next = child.nextChild;\n\n          if (child.visible) {\n            child.updateTransform();\n          }\n        }\n      }\n\n      return result;\n    }\n    /**\r\n     * Renders the object using the WebGL renderer. Copied from and overrides PixiJS v5 method\r\n     */\n\n  }, {\n    key: \"render\",\n    value: function render(renderer) {\n      // if the object is not visible or the alpha is 0 then no need to render this element\n      if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n        return;\n      } // do a quick check to see if this element has a mask or a filter.\n\n\n      if (this._mask || this.filters && this.filters.length) {\n        this.renderAdvanced(renderer);\n      } else {\n        this._render(renderer);\n\n        var child;\n        var next; // simple render children!\n\n        for (child = this._firstChild; child; child = next) {\n          next = child.nextChild;\n          child.render(renderer);\n        }\n      }\n    }\n    /**\r\n     * Render the object using the WebGL renderer and advanced features. Copied from and overrides PixiJS v5 method\r\n     */\n\n  }, {\n    key: \"renderAdvanced\",\n    value: function renderAdvanced(renderer) {\n      renderer.batch.flush();\n      var filters = this.filters;\n      var mask = this._mask; // _enabledFilters note: As of development, _enabledFilters is not documented in pixi.js\n      // types but is in code of current release (5.2.4).\n      // push filter first as we need to ensure the stencil buffer is correct for any masking\n\n      if (filters) {\n        if (!this._enabledFilters) {\n          this._enabledFilters = [];\n        }\n\n        this._enabledFilters.length = 0;\n\n        for (var i = 0; i < filters.length; i++) {\n          if (filters[i].enabled) {\n            this._enabledFilters.push(filters[i]);\n          }\n        }\n\n        if (this._enabledFilters.length) {\n          renderer.filter.push(this, this._enabledFilters);\n        }\n      }\n\n      if (mask) {\n        renderer.mask.push(this, this._mask);\n      } // add this object to the batch, only rendered if it has a texture.\n\n\n      this._render(renderer);\n\n      var child;\n      var next; // now loop through the children and make sure they get rendered\n\n      for (child = this._firstChild; child; child = next) {\n        next = child.nextChild;\n        child.render(renderer);\n      }\n\n      renderer.batch.flush();\n\n      if (mask) {\n        renderer.mask.pop(this);\n      }\n\n      if (filters && this._enabledFilters && this._enabledFilters.length) {\n        renderer.filter.pop();\n      }\n    }\n    /**\r\n     * Renders the object using the Canvas renderer. Copied from and overrides PixiJS Canvas mixin in V5 and V6.\r\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n  }, {\n    key: \"renderCanvas\",\n    value: function renderCanvas(renderer) {\n      // if not visible or the alpha is 0 then no need to render this\n      if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n        return;\n      }\n\n      if (this._mask) {\n        renderer.maskManager.pushMask(this._mask);\n      }\n\n      this._renderCanvas(renderer);\n\n      var child;\n      var next;\n\n      for (child = this._firstChild; child; child = next) {\n        next = child.nextChild;\n        child.renderCanvas(renderer);\n      }\n\n      if (this._mask) {\n        renderer.maskManager.popMask(renderer);\n      }\n    }\n  }]);\n\n  return LinkedListContainer;\n}(Container);\n\nEmitter.registerBehavior(AccelerationBehavior);\nEmitter.registerBehavior(AlphaBehavior);\nEmitter.registerBehavior(StaticAlphaBehavior);\nEmitter.registerBehavior(RandomAnimatedTextureBehavior);\nEmitter.registerBehavior(SingleAnimatedTextureBehavior);\nEmitter.registerBehavior(BlendModeBehavior);\nEmitter.registerBehavior(BurstSpawnBehavior);\nEmitter.registerBehavior(ColorBehavior);\nEmitter.registerBehavior(StaticColorBehavior);\nEmitter.registerBehavior(OrderedTextureBehavior);\nEmitter.registerBehavior(PathBehavior);\nEmitter.registerBehavior(PointSpawnBehavior);\nEmitter.registerBehavior(RandomTextureBehavior);\nEmitter.registerBehavior(RotationBehavior);\nEmitter.registerBehavior(StaticRotationBehavior);\nEmitter.registerBehavior(NoRotationBehavior);\nEmitter.registerBehavior(ScaleBehavior);\nEmitter.registerBehavior(StaticScaleBehavior);\nEmitter.registerBehavior(ShapeSpawnBehavior);\nEmitter.registerBehavior(SingleTextureBehavior);\nEmitter.registerBehavior(SpeedBehavior);\nEmitter.registerBehavior(StaticSpeedBehavior);\nexport { Emitter, LinkedListContainer, Particle, ParticleUtils, PropertyList, PropertyNode, index$1 as behaviors, upgradeConfig };"],"names":["_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_superPropBase","object","property","prototype","hasOwnProperty","call","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","_inherits","subClass","superClass","TypeError","create","constructor","writable","configurable","defineProperty","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","self","assertThisInitialized","_classCallCheck","instance","Constructor","_defineProperties","props","i","descriptor","enumerable","key","_createClass","protoProps","staticProps","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","NewTarget","PropertyNode","time","ease","next","isStepped","generateEase","data","node","array","list","_array$","first","hexToRGB","_array$i","_value","_time","start","end","GetTextureFromString","DEG_TO_RADS","Math","PI","rotatePoint","angle","p","s","sin","c","cos","xnew","x","y","ynew","combineRGBComponents","r","g","b","point","sqrt","normalize","oneOverLen","scaleBy","color","output","alpha","charAt","substr","indexOf","parseInt","a","segments","qty","oneOverQty","t","cp","getBlendMode","name","toUpperCase","replace","BehaviorOrder","ParticleUtils","verbose","createSteppedGradient","numSteps","undefined","currentNode","current","nextIndex","lerp","curVal","nextVal","Particle","_Sprite","_super","emitter","_this","prevChild","nextChild","config","anchor","maxLife","age","agePercent","oneOverLife","prev","init","kill","rotation","position","scale","tint","visible","recycle","parent","removeChild","PositionParticle","Emitter","particleParent","initBehaviors","updateBehaviors","recycleBehaviors","minLifetime","maxLifetime","customEase","_frequency","spawnChance","maxParticles","emitterLifetime","spawnPos","particlesPerWave","ownerPos","_prevEmitterPos","_prevPosIsValid","_posChanged","_parent","addAtBack","particleCount","_emit","_spawnTimer","_emitterLife","_activeParticlesFirst","_activeParticlesLast","_poolFirst","_origConfig","_autoUpdate","_destroyWhenComplete","_completeCallback","update","rotate","updateSpawnPos","updateOwnerPos","set","cleanup","lifetime","min","max","frequency","pos","copyFrom","emit","autoUpdate","behaviors","map","knownBehaviors","type","console","error","concat","filter","push","sort","order","Spawn","slice","updateParticle","recycleParticle","find","count","particle","fromCleanup","newRot","diff","remove","add","callback","delta","settings","prevX","prevY","curX","curY","emitPosX","emitPosY","_lerp","waveFirst","waveLast","len","_i","random","addChildAt","addChild","_i2","behavior","_next","_particle","_lerp2","initParticles","_next2","_particle2","_i3","cb","destroy","_i4","Rectangle","w","h","editorConfig","Torus","radius","innerRadius","affectRotation","PolygonalChain","countingLengths","totalLength","Array","isArray","chain","prevPoint","j","second","p1","p2","l","_prevPoint","_i5","_second","_i6","_this$segments$_i","segLength","out","chosenSeg","rand","_chosenSeg","index","AccelerationBehavior","_a","Late","minStart","maxStart","accel","maxSpeed","speed","velocity","deltaSec","vel","oldVX","oldVY","currentSpeed","atan2","intValueSimple","intColorSimple","intValueComplex","intColorComplex","intValueStepped","intColorStepped","PropertyList","isColor","interpolate","AlphaBehavior","Normal","reset","createList","StaticAlphaBehavior","getTextures","textures","outTextures","tex","dupe","texture","RandomAnimatedTextureBehavior","anims","anim","framerate","parsedAnim","duration","loop","_index","floor","animElapsed","animDuration","animFramerate","frame","SingleAnimatedTextureBehavior","BlendModeBehavior","blendMode","BurstSpawnBehavior","spacing","distance","ColorBehavior","StaticColorBehavior","OrderedTextureBehavior","helperPoint","MATH_FUNCS","WHITELISTER","RegExp","join","PathBehavior","path","pathString","matches","match","Function","parsePath","minMult","initRotation","initPosition","movement","mult","speedMult","PointSpawnBehavior","_first","RandomTextureBehavior","_index2","RotationBehavior","minSpeed","rotSpeed","oldSpeed","StaticRotationBehavior","NoRotationBehavior","ScaleBehavior","scaleMult","StaticScaleBehavior","ShapeSpawnBehavior","ShapeClass","shapes","Error","shape","getRandPos","typeOverride","registerShape","SingleTextureBehavior","SpeedBehavior","StaticSpeedBehavior","index$1","spawnShapes","editor","upgradeConfig","art","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","acceleration","minimumSpeedMultiplier","noRotation","extraData","_list","_list2","_mult","minimumScaleMultiplier","_list3","_mult2","_list4","rotationAcceleration","rotationSpeed","startRotation","orderedArt","spawnType","angleStart","particleSpacing","spawnCircle","minR","spawnRect","spawnPolygon","LinkedListContainer","_Container","_super2","_this2","_firstChild","_lastChild","_childCount","child","sortDirty","transform","_parentID","_boundsID","onChildrenChange","relative","child2","test","getChildAt","beginIndex","endIndex","begin","range","removed","_i7","_i8","RangeError","updateTransform","worldAlpha","_bounds","clear","_calculateBounds","renderable","calculateBounds","_mask","maskObject","addBoundsMask","filterArea","addBoundsArea","addBounds","updateID","rect","skipChildrenUpdate","renderer","filters","renderAdvanced","_render","render","batch","flush","mask","_enabledFilters","enabled","pop","maskManager","pushMask","_renderCanvas","renderCanvas","popMask","registerBehavior"],"sourceRoot":""}